swagger: '2.0'
info:
  description: '**** GENERATED BY Origix APPLICATION ****'
  version: '1.18.0'
  title: Origix REST API
  contact:
    name: sentenial
    url: http://sentenial.com
    email: engineering@sentenial.com
  license:
    name: For internal use only
    url: https://sentenial.com
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://www.nuapay.com/wp-content/uploads/2018/04/nuapay.svg
host: api.nuapay.com
basePath: /
schemes:
  - https
tags:
  - name: Introduction
    description: |-

      Welcome to the Nuapay REST API.  Processing Direct Debits (DDs) or Credit Transfers (CTs) via API is a simple way to integrate these payment methods into your systems.  This API reference provides information on available endpoints and how to interact with them.

      For Direct Debits once you have been configured with a Creditor Scheme ID just add the mandate, add the Direct Debit or Direct Debit Schedule and watch your payments come in.  If you're new to Direct Debits refer to our <a href = 'https://sentenial.github.io/developer-docs/np_landing_page.html' target='_blank' >Developer Documentation</a> for an overview of the Direct Debit process.

  - name: Getting Started
    description: |-

      To register for the service and get your API key, visit <a href=' https://www.nuapay.com/request-api-sandbox/' target='_blank' >https://www.nuapay.com/request-api-sandbox/</a> or e-mail: [api.support@nuapay.com](mailto:api.support@nuapay.com)

      If you prefer to talk to someone, call 00353 (0)1 901 2398.

      We'll have you up and running in no time.

  - name: API Endpoints
    description: |-

      Once you have your API key, you can send requests to the following endpoints:

      `Live: https://api.nuapay.com`

      `UAT: https://sandbox.nuapay.com/`

      Our APIs are RESTful and we use JSON format for submitting and retrieving data.

      <!-- A note on IDs: All IDs used in URIs are encoded. IDs used in request bodies are unencoded. -->

      To view all available Nuapay REST endpoints, see the [Resources](#tag/Returned-Resources) sections below.
      <aside class='notice'>
      If you choose to use Java to integrate with our API, then you can make use of the <a href='https://github.com/sentenial/nuapay-rest-client' target='_blank'>Nuapay Java Rest Client</a> library.  
      </aside>
  - name: Authentication
    description: |-

        Access to the API is controlled by HTTP Basic authentication. 

        Provide your API key as the basic authentication username, encoded in Base64. No password needs to be provided, however the request must be made from an allowed IP address configured in Nuapay.

        API authentication header format: 

        `Authorization: Basic Base64(<API_Key>:)`

        All API requests must be made over HTTPS, calls made over plain HTTP will fail. All API requests must be authenticated.
        
        
        <br>
        > To authorize, use this code:

        ```bash
        # With curl, you can just pass BASIC auth header 
        # (-u option) with each request
        $ curl 'https://api.nuapay.com/schemes/46pkx7o9n5/mandates' 
          -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
        ```
        ```java
        // With java client library use following code to set up your ApiKey
        ServiceConfiguration serviceConfig = new ServiceConfiguration();
        serviceConfig.setApiKey('bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686');

        RetrieveMandateResponse retrieveMandateResponse = 
          new MandateServiceDefault(serviceConfig)
            .retrieveMandate('46pkx7o9n5', '46pkx7o9n5');
        ```

        > Make sure to replace `bb09c2b6a...` with your API key.
        <br>  
  - name: Output Encoding Rules
    description: |-

      The code converts untrusted input into a safe form where the input is displayed as data to the user without executing as code in the browser.

      The implementation is based off the <a href='https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet#Output_Encoding_Rules_Summary' target='_blank' >OWASP recommendations</a>.

  - name: JWS-Signature Header
    description: |- 
     
      The JWS-signature header is used to verify requests made to certain endpoints, it is generated based on the request body to be sent,
      a customer private key and X.509 certificate issued by Nuapay.

      For details on how to generate a private key and obtaining an X.509 certificate see the security section of the <a href = 'https://sentenial.github.io/developer-docs/np_secjwsgenerator.html' target='_blank'>Developer Resource</a> pages.

      Optionally the JWS-signature can also be applied to the following POST / PUT endpoints,
      * Create Mandate
      * Upload Mandate Document
      * Update Mandate
      * Activate Mandate
      * Cancel Mandate
      * Create Direct Debit
      * Create Direct Debit & Mandate
      * Revoke Direct Debit
      * Revoke All Direct Debit
      * Re-present Failed Direct Debit
      * Create Schedule
      * Create Schedule & Mandate
      * Cancel Schedule
      * Upload File

      The JWS-signature is not required for GET endpoints.
       <br>
       > Example JWS-Signature Header

      ``` json

      JWS-Signature: eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCIsImlhdCIsImlzcyJdLCJraWQiOiIxNzk2NDU1MDI1IiwiaXNzIjoiT1VcdTAwM2ROdWFwYXkgQVBJLExcdTAwM2RMb25kb24sT1x1MDAzZE51YXBheSxDXHUwMDNkR0IsQ05cdTAwM2RvbWdkMzZkcG1rIiwiYWxnIjoiUlMyNTYiLCJpYXQiOjB9..wE6Cal9Hh62YKjjD4BbQpdPc1IwtteZ-ys3aiOWJDVLFdVxnJ0pEvcsK1nfRnfiiqCOB9PbapNrpG1e3jdWA3y-bm0KphLE52PEwhWZkD-x3WeFyxAeZT_Ma7Fem08k31ifMLMPYkXAyUDUfCao4DHJQHmOWQuDawYC4lH4qtiI

      ```
  - name: Returned Resources
    description: |-

      All resources returned by endpoints are contained within a resource envelope.

      For single entities, the JSON envelope has the following structure:

      JSON Path | Type | Description
      ---- | ---- | -----------
      uri | String | Resource URI
      data.id | String  | Resource ID
      data.uri | String  | Resource URI
      data.* |  | Resource content


      For collections, the JSON envelope contains the following structure:

      JSON Path | Type | Description
      ---- | ---- | -----------
      uri  | String | Collection resource URI
      data | Collection  | Collection of resources
      data[].id | String  | Resource ID
      data[].uri | String  | Resource URI
      data[].* |  | Resource content
      data.page | Pagination object | Meta-data related to pagination
      data.sort | Sort object | Meta-data related to sorting (currently empty)

      <aside class='warning'>
      NOTE: <strong>data.id</strong>  is a Resource ID that is used as an URI parameter. When building the URI to view or update resource the id is to be used. <strong>data.uri</strong> contains ready to use URI of the resource returned.   
      </aside>
       <br>
       > Example response with single entity

      ``` json

      {
        'uri' : '/files/23qzxn1f7m',
        'data' : {
          'id' : '23qzxn1f7m',
          'uri' : '/files/23qzxn1f7m',
          'originalFileName': 'originalFileName.xml',
          'newFileName': 'newFileName.xml.QUEUED'
        }
      }
      ```

      > Example response with collection

      ``` json
        
      {
        'uri' : '/schemes/8g3o2yyk2w/mandates',
        'data' : [ {
          'id' : '46pkxn8e9n',
          'uri' : '/schemes/8g3o2yyk2w/mandates/46pkxn8e9n',
          'mandateId' : 'b8b7ee91-b403-4ecb-9d98-059746dd8149',
          'debtorName' : 'Debtor Name',
          'debtorIBAN' : 'GB94SELN00999976543215',
          'debtorMobileNumber' : '0360321312312',
          'mandateStatus' : 'ACTIVE',
          'creationDate' : '2015-07-21'
        } 
        ],
        'page' : {
          'pageNumber' : 1,
          'pageSize' : 1,
          'totalElements' : 1,
          'totalPages' : 1
        },
        'sort' : [ ]
      }
      ```
  - name: Resource IDs
    description: |-


      The ID is part of resource URI and in this documentation is marked as such by placing it between curly brackets.  Sample scheme resource URI is `/schemes/{schemeId}/mandates/{mandateId}` where `schemeId` and `mandateId` are the Scheme and Mandate Resource IDs accordingly. 

      <aside class='warning'>
      NOTE: Resource ID is not a business identifier, it is a technical ID assigned during the POST of a new resource and is available in the response ID property. This ID can then be used to query the resource.
      </aside>

      <aside class='notice'>
      NOTE: <strong>data.uri</strong>  is a Resource URI that contains related Resource IDs as well. For complex URIs, where the Resource belongs to another Resource, the  <strong>data.uri</strong> element returns ready to use URI containing all related Resource IDs
      </aside>

      [Returned Resources](#tag/Returned-Resources) `data[].id` element contains the Resource ID. In above example [Mandate Resource](#operation/viewMandateUsingGET) needs to be retrieved to get the `mandateId` and [Creditor Scheme Resource](#operation/listCreditorSchemesUsingGET) needs to be retrieved to get `schemeId`.

  - name: Links
  - name: Transactions
    description: |-
      Transaction is a resource that describes a posting to an account that results in an increase or decrease to a balance of the account.

      To access transaction use following URL: [https://api.nuapay.com/accounts/{accountId}/transactions/{transactionId}](https://api.nuapay.com/accounts/{accountId}/transactions/{transactionId}) where

      * accountId, is the Account resource ID.

      * transactionId, is the Transaction resource ID.
  - name: Transaction Types
    description: |-
      The following table contains a list of the transaction types that can be returned as part of the 'List Transaction' and 'View Transaction' endpoints.

      Transaction | Transaction Type | Debit Credit Indicator | Counterparty
      ----------- | ---------------- | ---------------------- | ------------
      Credit Transfer Bank Reject | CREDIT_TRANSFER_BANK_REJECT | CREDIT | Debtor
      Direct Debit Batch | DIRECT_DEBIT_BATCH | CREDIT | Debtor
      Direct Debit Bank Cancellation | DIRECT_DEBIT_BANK_CANCELLATION | DEBIT | Creditor
      Direct Debit Reject | DIRECT_DEBIT_REJECT | DEBIT | Creditor
      Direct Debit Reversal | DIRECT_DEBIT_REVERSAL | DEBIT | Creditor
      Direct Debit Return | DIRECT_DEBIT_RETURN | DEBIT | Creditor
      Direct Debit Refusal | DIRECT_DEBIT_REFUSAL | DEBIT | Creditor
      Direct Debit Authorized Refund | DIRECT_DEBIT_AUTHORIZED_REFUND | DEBIT | Creditor
      Direct Debit Unauthorized Refund | DIRECT_DEBIT_UNAUTHORIZED_REFUND | DEBIT | Creditor
      Outgoing Credit Transfer | OUTGOING_CREDIT_TRANSFER | DEBIT | Creditor
      Availability Fee | AVAILABILITY_FEE | DEBIT | N/A for Fees
      Direct Debit Batch Transactions Fee | DIRECT_DEBIT_BATCH_TRANSACTIONS_FEE | DEBIT | N/A for Fees
      Direct Debit R-Transaction Fee | DIRECT_DEBIT_RTRANSACTIONS_FEE | DEBIT | N/A for Fees
      Credit Transfer Reject Fee | CREDIT_TRANSFER_RTRANSACTION_FEE | DEBIT | N/A for Fees
      Incoming Credit Transfer | INCOMING_CREDIT_TRANSFER | CREDIT | Debtor
      Credit Transfer Recall | CREDIT_TRANSFER_RECALL | CREDIT | Debtor
      E-Mandate Setup Fee - CORE Scheme | CORE_EMANDATE_SETUP_FEE | DEBIT | N/A for Fees
      E-Mandate Setup Fee - BACS Scheme | BACS_EMANDATE_SETUP_FEE | DEBIT | N/A for Fees
      E-Mandate Setup Fee - B2B Scheme | B2B_EMANDATE_SETUP_FEE | DEBIT | N/A for Fees
      E-Mandate Fee - CORE Scheme | CORE_EMANDATE_FEE | DEBIT | N/A for Fees
      E-Mandate Fee - BACS Scheme | BACS_EMANDATE_FEE | DEBIT | N/A for Fees
      E-Mandate Fee - B2B Scheme | B2B_EMANDATE_FEE | DEBIT | N/A for Fees
      Outgoing Credit Transfer Fee | OUTGOING_CREDIT_TRANSFER_FEE | DEBIT | N/A for Fees
      Incoming Credit Transfer Fee | INCOMING_CREDIT_TRANSFER_FEE | DEBIT | N/A for Fees
      Credit Transfer Recall Fee | CREDIT_TRANSFER_RECALL_FEE | DEBIT | N/A for Fees
      Overdraft Fee | OVERDRAFT_FEE | DEBIT | N/A for Fees
      Incoming Faster Payment | INCOMING_FPM_CREDIT_TRANSFER | CREDIT | Debtor
      Outgoing Faster Payment | OUTGOING_FPS_CREDIT_TRANSFER | DEBIT | Creditor
      Non-Standard Nuapay Fee | OCX_ADHOC_FEE | DEBIT | N/A for Fees
      Credit Adjustment | CUSTOMER_ADJUSTMENT_CREDIT | CREDIT | Debtor
      Debit Adjustment | CUSTOMER_ADJUSTMENT_DEBIT | DEBIT | Creditor
      SEPA Direct Debit File Export Fee |SEPA_DIRECT_DEBIT_FILE_EXPORT_FEE |	DEBIT |	N/A for Fees
      Incoming Instant Credit Transfer Fee | INCOMING_EXPRESS_CREDIT_TRANSFER_FEE | DEBIT | N/A for Fees
      Outgoing Instant Credit Transfer Fee | OUTGOING_EXPRESS_CREDIT_TRANSFER_FEE | DEBIT | N/A for Fees
      Incoming Instant Credit Transfer | INCOMING_INSTANT_CREDIT_TRANSFER | CREDIT | Debtor
      Outgoing Instant Credit Transfer | INSTANT_CREDIT_TRANSFER_OUT | DEBIT | Creditor
      BACS Mandate File Export Fee | BACS_MANDATE_FILE_EXPORT_FEE | DEBIT | N/A for Fees
      Own Account Transfer Credit | OWN_ACCOUNT_CREDIT_TRANSFER | CREDIT | Debtor
      Own Account Transfer Debit | OWN_ACCOUNT_DEBIT_TRANSFER | DEBIT | Creditor
      Standard Mandate Creation Fee | STANDARD_MANDATE_CREATION_FEE | DEBIT| N/A for Fees
  - name: Balances
    description: Balances endpoints
  - name: Mandates
    description: |-
      Mandates are associated to a Creditor Scheme (CORE or B2B) and enable the collection of funds from a debtor's account to a creditor's account via a Direct Debit.To access a mandate use the following URL: `https://api.nuapay.com/schemes/{schemeId}/mandates/{mandateId}`

      where

      * `schemeId`, is the Creditor Scheme resource ID returned by [List Creditor Schemes](#operation/listCreditorSchemesUsingGET)

      * `mandateId`, is the Mandate resource ID returned by a variety of mandate services including: [Create Mandate](#operation/addMandateUsingPOST), [List Organization Mandates](#operation/listOrganizationMandatesUsingGET),[List Scheme Mandates](#operation/listSchemeMandatesUsingGET), [Retrieve Mandate](#operation/viewMandateUsingGET)
  - name: Other
    description: Other endpoints
  - name: Direct Debits
    description: |-
      Direct debits are the financial transactions associated to the mandate.

      To access direct debits use the following URL:

      `https://api.nuapay.com/schemes/{schemeId}/mandates/{mandateId}/directdebits/{directDebitId}`

      where

      * `schemeId`, is the Creditor Scheme returned by [List Creditor Schemes](#operation/listCreditorSchemesUsingGET)

      * `mandateId`, is the Mandate is returned by a variety of mandate services including: [Create Mandate](#operation/addMandateUsingPOST), [List Organization Mandates](#operation/listOrganizationMandatesUsingGET),[List Scheme Mandates](#operation/listSchemeMandatesUsingGET), [Retrieve Mandate](#operation/viewMandateUsingGET)

      * `directDebitId`, is the Direct Debit returned by a variety of direct debit services including: [Create Direct Debit](#operation/addSinglePaymentUsingPOST), [List Organization Direct Debits](#operation/listDirectDebitsOrganizationUsingGET), [List Scheme Direct Debits](#operation/listDirectDebitsSchemeUsingGET), [List Mandate Direct Debits](#operation/listDirectDebitsSchemeMandateUsingGET), [Retrieve Direct Debit](#operation/viewDirectDebitUsingGET)
  - name: Payment Schedules
    description: |-
      Payment Schedules allow you to set up a number of payments against a mandate in one go. Schedules can be Fixed-Length (e.g. collect 10 EUR each month for 12 months) or Open-Ended (e.g. collect 10 EUR every month with no fixed number of payments being defined).

      To access payment schedules use the following URL:

      `https://api.nuapay.com/schemes/{schemeId}/mandates/{mandateId}/directdebits/{directDebitId}`

      where

      * `schemeId`, is the Creditor Scheme resource id returned by [List Creditor Schemes](#operation/listCreditorSchemesUsingGET)

      * `mandateId`, is the Mandate resource id returned by a variety of mandate services including: [Create Mandate](#operation/addMandateUsingPOST), [List Organization Mandates](#operation/listOrganizationMandatesUsingGET),[List Scheme Mandates](#operation/listSchemeMandatesUsingGET), [Retrieve Mandate](#operation/viewMandateUsingGET)

      * `scheduleId`, is the Payment Schedule resource id returned by a variety of payment schedule services including: [Create Schedule](#operation/addPaymentScheduleUsingPOST), [List Originator Payment Schedules](#operation/listPaymentSchedulesMandateUsingGET), [List Mandate Payment Schedules](#operation/listPaymentSchedulesMandateUsingGET) [Create Schedule & Mandate](#operation/addPaymentScheduleUsingPOST_1)
  - name: Creditor Schemes
    description: 'The Creditor Schemes associated to the Merchant. Each scheme will have a unique Creditor Scheme ID and a Scheme Type, CORE, B2B etc.'
  - name: Files
    description: A `POST` request used to upload a file. A request must contain the `multipart/form-data` content type with a `json` part containing input parameters in a JSON structure and a `file` part with file content.
  - name: Accounts
    description: Accounts endpoints
  - name: Validate Accounts
    description: Validate Accounts endpoints
  - name: About Responses
    description: |-
      Every API Request will generate a HTTP Response.  This will contain a HTTP Response Code to indicate the status of the Request.  In addition certain HTTP Responses (400, 422) may generate an Error Response with an Error Code.
  - name: HTTP Status Codes
    description: |-

      You may encounter the following response codes. Selected response codes will contain more information to help identify problems.

      <nobr>Status Code</nobr> | Usage
      ---------- | -------
      200 | OK -- The request completed successfully.
      201 | Created -- A new resource has been created successfully. The resource is appended to the response.
      400 | Bad Request -- The request was malformed. The response body will include an error providing further information.
      401 | Unauthorized -- Your API key is wrong.
      403 | Forbidden -- The client has provided a valid Authentication header, but it does not have permission to access this resource.
      404 | Not Found -- The requested resource did not exist.
      405 | Method Not Allowed -- When a HTTP method is being requested that isn't allowed.
      410 | Gone -- The API requested has been removed from our servers.
      412 | Precondition Failed -- Certain unmet conditions must be fulfilled before the request to be processed e.g. timestamp is too old.
      415 | Unsupported Media Type -- If incorrect content type was provided as part of the request (e.g. other than 'application/json').
      422 | Unprocessable Entity -- Used for validation errors. More details will be provided in response body.
      429 | Too Many Requests -- Status code indicates the user has sent too many requests in a given amount of time.
      500 | Internal Server Error -- We had a problem with our server. Try again later and if the problem persists contact the Nuapay application support team.
      501 | Not Implemented -- When the endpoint is not implemented yet.
      503 | Service Unavailable -- We're temporarially offline for maintanance. Please try again later.
  - name: Errors
    description: |-

      Whenever an error response with status `400` or `422` is returned, the body will contain a JSON object that describes the problem. The error object has the following structure:

      Path | Type | Description
      ---- | --------- | -----------
      returnCode | String | Error Code
      returnDescription | String | Error description
      details | Array |  The object holds collection of validation errors. It is returned only for `returnCode` equal to `8888`,`9999`.
      details[].code | String | Error Code 
      details[].field | String | JSON path to request object property the error is related to
      details[].description | Error description | 
      details[].resourceUri | String | This property holds existing resource URI in case the validation error states the resource already exist and can't be created. It is returned only for `returnCode` equal to `9999`.
      See [Error Codes](#tag/Error-Codes) section for details.

      <br>
       > For example, a request that attempts to create a payment schedule with invalid start date will produce a
      `400 Bad Request` response:

      ``` http
      HTTP/1.1 400 Bad Request
      Content-Type: application/json

      {
        'returnCode' : '7043',
        'returnDescription' : 'Start date is invalid'
      }
      ```
  - name: Error Codes
    description: |-
      Following is the list of error codes with description as a possible return when request failed:

      Code | Description 
      ---- | ----------- 
      2000 | General Mandate Processing Error. Note the error code is returned when no specific error code is assigned to the validation.  The description may differ from case to case. <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      2005 | Debtor Account Validation Error <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      2006 | The Creditor Account referenced within the file does not exist within the system <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3001 | The debtor language must be provided	<em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3002 | The language parameter is incorrect <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3003 | The debtor address line 1 must be provided <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3004 | The debtor country must be provided <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3006 | The address parameter is mandatory when paper handling is set to true <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3007 | The country is invalid <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3008 | The debtor town must be provided <em>[Create mandate](#operation/addMandateUsingPOST) [Update mandate](#operation/editMandateUsingPUT)</em>
      3009 | The Mandate cannot be edited from its current state <em>[Update mandate](#operation/editMandateUsingPUT)</em>
      3010 | Mandate cannot be cancelled from its current state <em>[Cancel Mandate](#operation/cancelMandateUsingPOST)</em>
      3021 | A Payment already exists against a ONCE_OFF mandate <em>[Create direct debit](#operation/addSinglePaymentUsingPOST)</em>
      3022 | The Mandate cannot be Activated from its current state <em>[Activate mandate](#operation/activateMandateUsingPOST)</em>
      3023 | Mandate could not be added due to missing PDF template <em>[Create mandate](#operation/addMandateUsingPOST)</em>
      3024 | The debtor e-mail must be provided <em>[Create mandate](#operation/addMandateUsingPOST)</em>
      3025 | The debtor mobile number must be provided <em>[Create mandate](#operation/addMandateUsingPOST)</em>
      3026 | Mandate Type not supported in current configuration <em>[Update mandate](#operation/editMandateUsingPUT)</em>
      3027 | A Mandate exists in the system with the specified SEPA mandate ID. This ID must be unique for an Originator <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3028 | In Respect of Contract ID not provided <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      3029 | No SEPA Mandate ID Provided <em>[Create mandate](#operation/addMandateUsingPOST)</em>
      3030 | Language is not supported by originator <em>[Create mandate](#operation/addMandateUsingPOST)</em>
      4003 | Payment Date is not a working day <em>[Create direct debit](#operation/addSinglePaymentUsingPOST), [Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4004 | Date format invalid <em>[Create direct debit](#operation/addSinglePaymentUsingPOST)</em>
      4005 | Payment Date is not far enough in the future <em>[Create direct debit](#operation/addSinglePaymentUsingPOST), [Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4006 | Invalid Number of Payments <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4007 | Invalid Schedule Reference <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4008 | Payment Date is too far in the future <em>[Create direct debit](#operation/addSinglePaymentUsingPOST), [Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4009 | Payment Amount is invalid <em>[Create direct debit](#operation/addSinglePaymentUsingPOST), [Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4011 | First Payment Amount Invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4013 | Last Payment Amount Invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4016 | Representation is not enabled for the creditor scheme <em>[Represent failed direct debit](#operation/representDirectDebitUsingPOST)</em>
      4019 | End To End Id is invalid <em>[Create direct debit](#operation/addSinglePaymentUsingPOST)</em>
      4021 | Direct Debit cannot be revoked as it is not in a valid status <em>[Revoke direct debit](#operation/revokeDirectDebitUsingPOST)</em>
      4022 | No Direct Debit exists matching information provided	 <em>[Revoke all direct debits](#operation/revokeAllDirectDebitsUsingPOST)</em>
      4023 | Direct Debit is not in a valid condition for Representation <em>[Represent failed direct debit](#operation/representDirectDebitUsingPOST)</em>
      4024 | Invalid Representation Fee amount <em>[Represent failed direct debit](#operation/representDirectDebitUsingPOST)</em>
      4025 | Invalid Representation Date <em>[Represent failed direct debit](#operation/representDirectDebitUsingPOST)</em>
      4029 | Number of Payments not provided <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4031 | Final Payment amount should not be provided for an Open Ended Schedule <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4032 | Number of Payments should not be provided for an Open Ended Schedule <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4033 | Only a Start date should be provided for a Daily/Yearly Schedule <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4034 | Only Day of Week should be provided for a Weekly/Bi-Weekly Schedule <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4035 | Only Date in Month or Week in Month and Day of week should be provided for a Monthly schedule <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4036 | An Active schedule already exists on this mandate <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4039 | Payment Type must be Fixed Length on a Once off Mandate <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4040 | Number of Payments on a Once Off Mandate must be set to 1 <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      4041 | End To End Id is not unique <em>[Create direct debit](#operation/addSinglePaymentUsingPOST)</em>
      4042 | Mandate is not in a Valid Status <em>[Create direct debit](#operation/addSinglePaymentUsingPOST), [Create payment schedule](#operation/addPaymentScheduleUsingPOST), [Represent DD](#operation/representDirectDebitUsingPOST)</em>
      4043 | No Direct Debit exists in a valid status <em>[Revoke all direct debits](#operation/revokeAllDirectDebitsUsingPOST)</em>
      4048 | Payment Custom Frequency must be provided if Payment Schedule Frequency is set to CUSTOM <em>[Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      7001 | Date format invalid <em>[List mandates](#operation/listSchemeMandatesUsingGET), [List direct debits](#operation/listDirectDebitsSchemeMandateUsingGET),[List failed direct debits](#operation/listFailedDirectDebitUsingGET)</em>
      7002 | 'From Date ' must be earlier or equal to 'To Date' <em>[List mandates](#operation/listSchemeMandatesUsingGET), [List direct debits](#operation/listDirectDebitsSchemeMandateUsingGET), [List failed direct debits](#operation/listFailedDirectDebitUsingGET)</em>
      7003 | Max date range is exceeded <em>[List mandates](#operation/listSchemeMandatesUsingGET), [List direct debits](#operation/listDirectDebitsSchemeMandateUsingGET), [List failed direct debits](#operation/listFailedDirectDebitUsingGET)</em>
      7004 | Boolean parameter value must be either 'true' or 'false' <em>[List failed direct debits](#operation/listFailedDirectDebitUsingGET), [Create direct debit](#operation/addSinglePaymentUsingPOST), [Create payment schedule](#operation/addPaymentScheduleUsingPOST), [Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST), [Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      7005 | Max file size exceeded <em>[Upload file](#operation/uploadFileUsingPOST)</em>
      7006 | Invalid file supplied. File extension does not match file format <em>[Upload file](#operation/uploadFileUsingPOST)</em>
      7007 | Not allowed file format <em>[Upload file](#operation/uploadFileUsingPOST)</em>
      7008 | Invalid file name <em>[Upload file](#operation/uploadFileUsingPOST)</em>
      7009 | The Creditor Scheme ID/Type referenced does not exist within the system <em>[Upload file](#operation/uploadFileUsingPOST)</em>
      7010 | Debtor Name is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT), [List mandates](#operation/listSchemeMandatesUsingGET)</em>
      7011 | Address Line1 is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7012 | Address Line2 is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7013 | Address Town is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7014 | Address Postal Code is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7015 | Address State is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7016 | Address ISO Country Code is invalid <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7017 | Debtor Language is invalid <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7018 | Debtor Email is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7019 | Phone Number is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7020 | Mobile Number is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7021 | Mandate Id is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT), [List mandates](#operation/listSchemeMandatesUsingGET)</em>
      7022 | Contract Reference is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7023 | Signature Location is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT), [Activate mandate](#operation/activateMandateUsingPOST)</em>
      7024 | Signature Date is invalid or max length is exceeded <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT), [Activate mandate](#operation/activateMandateUsingPOST)</em>
      7025 | Mandate Type is invalid <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7026 | Debtor IBAN is invalid <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT), [List mandates](#operation/listSchemeMandatesUsingGET)</em>
      7027 | Debtor Bank BIC is invalid <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7028 | Creditor IBAN is invalid <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7029 | Creditor Bank BIC is invalid <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7030 | Mandate Source is invalid <em>[Update mandate](#operation/editMandateUsingPUT)</em>
      7031 | Debtor Account IBAN is required <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7032 | Debtor object is required <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7033 | Debtor Account object is required <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7034 | Debtor name is required <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7035 | Remittance Information is invalid or max length is exceeded <em>[Create direct debit](#operation/addSinglePaymentUsingPOST), [Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7036 | Requested Collection Date is required <em>[Create direct debit](#operation/addSinglePaymentUsingPOST)</em>
      7037 | Payment Amount is required <em>[Create direct debit](#operation/addSinglePaymentUsingPOST), [Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7038 | Payment Frequency is required <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7039 | Payment Type is required <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7040 | Start Date is required <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7041 | Payment Frequency is invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7042 | Payment Type is invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7043 | Start date is invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7044 | Schedule Id is invalid or max length is exceeded <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST), [List direct debits](#operation/listDirectDebitsSchemeMandateUsingGET), [Revoke all direct debits](#operation/revokeAllDirectDebitsUsingPOST)</em>
      7045 | Number of Payments is invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7046 | Payment Day of Week is invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7047 | Payment Week of Month is invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7048 | Payment Day in Month is invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7049 | ResendMandateForSignature is invalid <em>[Update mandate](#operation/editMandateUsingPUT)</em>
      7050 | Page Number is invalid <em>[List mandates](#operation/listSchemeMandatesUsingGET), [List direct debits](#operation/listDirectDebitsSchemeMandateUsingGET), [List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7051 | Max page size is exceeded <em>[List mandates](#operation/listSchemeMandatesUsingGET), [List direct debits](#operation/listDirectDebitsSchemeMandateUsingGET), [List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7052 | Page size is invalid <em>[List mandates](#operation/listSchemeMandatesUsingGET), [List direct debits](#operation/listDirectDebitsSchemeMandateUsingGET), [List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7053 | Authorization Method is invalid <em>[Activate mandate](#operation/activateMandateUsingPOST), [Create mandate](#operation/addMandateUsingPOST)</em>
      7054 | Authorization Token is invalid or max length is exceeded <em>[Activate mandate](#operation/activateMandateUsingPOST), [Create mandate](#operation/addMandateUsingPOST)</em>
      7055 | Authorization email is invalid or max length is exceeded <em>[Activate mandate](#operation/activateMandateUsingPOST), [Create mandate](#operation/addMandateUsingPOST)</em>
      7056 | Authorization Mobile Number is invalid or max length is exceeded <em>[Activate mandate](#operation/activateMandateUsingPOST), [Create mandate](#operation/addMandateUsingPOST)</em>
      7057 | Ip Address is invalid or max length is exceeded <em>[Activate mandate](#operation/activateMandateUsingPOST), [Create mandate](#operation/addMandateUsingPOST)</em>
      7058 | Geographic Location is invalid or max length is exceeded <em>[Activate mandate](#operation/activateMandateUsingPOST), [Create mandate](#operation/addMandateUsingPOST)</em>
      7059 | Mandate Status is invalid <em>[List mandates](#operation/listSchemeMandatesUsingGET)</em>
      7060 | End To End Id is invalid <em>[Create direct debit](#operation/addSinglePaymentUsingPOST), [Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST)</em>	
      7063 | Payment Status is invalid <em>[List direct debits](#operation/listDirectDebitsSchemeMandateUsingGET)</em>
      7064 | Operation Reason exceeds maximum length <em>[Cancel Mandate](#operation/cancelMandateUsingPOST), [Revoke all direct debits](#operation/revokeAllDirectDebitsUsingPOST), [Revoke direct debit](#operation/revokeDirectDebitUsingPOST)</em>
      7065 | Invalid Domestic Bank Code <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST)</em>
      7066 | Invalid Domestic Branch Code <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST)</em>
      7067 | Invalid Account Country <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST)</em>
      7068 | Invalid Domestic Checksum <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST)</em>
      7070 | The SEPA Creditor Scheme ID does not exist for the selected scheme	<em>[Validate IBAN](#operation/validateDomesticAccountUsingPOST)</em>
      7071 | No account associated to the creditor scheme <em>[Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST), [Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      7072 | PDF could not be generated / retrieved <em>[Retrieve mandate document](#operation/getPdfFileUsingGET)</em>
      7074 | Mandate Operation Reason not provided <em>[Cancel Mandate](#operation/cancelMandateUsingPOST)</em>
      7075 | Domestic Account Number is required if IBAN is not provided <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST)</em>
      7076 | Invalid Domestic Account Number <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST)</em>
      7077 | Account Country is required if IBAN is not provided <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST)</em>
      7078 | 'Reject From Date' is required <em>[List failed direct debits](#operation/listFailedDirectDebitUsingGET)</em>
      7079 | 'Reject To Date' is required <em>[List failed direct debits](#operation/listFailedDirectDebitUsingGET)</em>
      7080 | Payment Custom Frequency is invalid <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7098 | Invalid IBAN <em>[Validate IBAN](#operation/validateDomesticAccountUsingPOST)</em>
      7099 | Domestic Account details are not allowed if IBAN is provided <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST), [Validate IBAN](#operation/validateDomesticAccountUsingPOST)</em>					  
      7101 | Provided schedule details would create two payments for first collecting period. Please change schedule details or twoPaymentsSamePeriod flag <em>[Create payment schedule](#operation/addPaymentScheduleUsingPOST)</em>
      7104 | Debtor Account Country does not match Scheme Country <em>[Create mandate](#operation/addMandateUsingPOST)</em>
      7105 | Creditor Account Country does not match Scheme Country <em>[Create mandate](#operation/addMandateUsingPOST)</em>
      7106 | Exported Mandates cannot be amnded when Edit Doc Handling / Regulatory Screening is enabled <em>[Update mandate](#operation/editMandateUsingPUT)</em>
      7107 | Mandate Id and Debtor Account details cannot be amended when Debtor Mandate Flow is used <em>[Update mandate](#operation/editMandateUsingPUT)</em>
      7108 | The file extension does not match that of the content-type header <em>[Upload Mandate Document](#operation/putPdfFileUsingPOST)</em>
      7109 | The file size exceeds 2MB <em>[Upload Mandate Document](#operation/putPdfFileUsingPOST)</em>
      7110 | The file name is invalid or exceeds the max length <em>[Upload Mandate Document](#operation/putPdfFileUsingPOST)</em>
      7116 | A Once Off Mandate cannot have Migrating Mandate value true <em>[Update mandate](#operation/editMandateUsingPUT)</em>
      7117 | BBAN specific fields not allowed	 <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7118 | Payment schedule status is invalid <em>[List payment schedules](#operation/listPaymentSchedulesMandateUsingGET)</em>
      7120 | Payment schedule cannot be cancelled as it is not in ACTIVE status [Cancel Payment Schedule](#operation/cancelPaymentScheduleUsingPOST)</em>
      7123 | Mandate object is required  <em>[Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST),[Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      7124 | Current Creditor Scheme configuration does not allow to create mandate on the fly  <em>[Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST),[Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      7128 | Required request part 'file' is not present <em>[Upload Mandate Document](#operation/putPdfFileUsingPOST)</em>
      7129 | Debtor Bank BIC is required as Debtor Bank is located in a NON-EEA Country <em>[Create mandate](#operation/addMandateUsingPOST),[Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST),[Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      7131 | Field is invalid or max length is exceeded <em>[Create account](#operation/addAccountUsingPOST), [List accounts](#operation/listAccountsUsingPOST)</em>
      7132 | Field is required <em>[Create account](#operation/addAccountUsingPOST)</em>
      7133 | IBAN is requried if External Account Validation is off <em>[Create account](#operation/addAccountUsingPOST)</em>
      7134 | Object is required <em>[Create account](#operation/addAccountUsingPOST)</em>
      7135 | Object is not allowed for current Originator configuration <em>[Create account](#operation/addAccountUsingPOST)</em>
      7136 | Account Validation Error <em>[Create account](#operation/addAccountUsingPOST)</em>
      7137 | Account already exist <em>[Create account](#operation/addAccountUsingPOST)</em>
      7138 | Currency is not supported <em>[Create account](#operation/addAccountUsingPOST)</em>
      7139 | Field is required for provided Account Country <em>[Create account](#operation/addAccountUsingPOST)</em>
      7140 | Field is not allowed for provided Account Country <em>[Create account](#operation/addAccountUsingPOST)</em>
      7141 | Field is not allowed for current Originator configuration <em>[Create account](#operation/addAccountUsingPOST)</em>
      7142 | Cannot generate account for current Originator configuration. Billing Mandate Reference is not set. <em>[Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST), [Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      7143 | Electronic Signature Details object is required. <em>[Create mandate](#operation/addMandateUsingPOST), [Activate mandate](#operation/activateMandateUsingPOST)</em>
      7144 | Account currency does not match payment currency. em>[Create transfer](#operation/transferUsingPOST) </em>
      7145 | Account From is the same as Account To. <em>[Create transfer](#operation/transferUsingPOST) </em>
      7146 | Transfer not allowed for current Originator configuration. <em>[Create transfer](#operation/transferUsingPOST)</em>
      7147 | Transfer not allowed for Originator type. <em>[Create transfer](#operation/transferUsingPOST) </em>
      7149 | Master Account is type is invalid <em>[Create Account](#operation/addAccountUsingPOST)</em>
      7150 | Master Account currency has to be the same as Sub-Account currency <em>[Create Account](#operation/addAccountUsingPOST)</em>
      7157 | Original transaction has not been found
      7166 | Debtor Name, Address Line 1 and Country are required where the Debtor bank and/or Creditor bank is based in a non-EEA country. Please update the mandate with the required information. <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT), [Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST), [Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      7202 | Invalid file MIME Type for file extention. Please check the file content. <em>[Upload file](#operation/uploadFileUsingPOST)</em>	
      7203 | Field is invalid or max length is exeeded <em>Multiple endpoints.  <em>Response details.field indicates the request property the error is related to</em>
      7204 | Value Date To is invalid. <em>[List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7205 | Value Date From is invalid. <em>[List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7206 | Amount From is invalid. <em>[List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7207 | Amount To is invalid. <em>[List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7208 | 'Value Date From' is not earlier or equal to 'Value Date To'. <em>[List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7209 | 'Amount From' is greater then 'Amount To'. <em>[List Transactions](#operation/listTransactionsUsingPOSTs)</em>
      7342 | Bank Branch Code must be set before generating a Nuapay account.<em>[Create account](#operation/addAccountUsingPOST)</em>
      7343 | When generating an IBAN the Bank country must be part of the EEA. Please check the bank country and try again <em>[Create account](#operation/addAccountUsingPOST)</em>
      7344 | The Bank Branch has closed (or is due to close)<em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7345 | This account does not support BACS Direct Debits<em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7346 | The account currency is not GBP <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7347 | The Sort Code or Account does not support AUDDIS <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7348 | The Bank does not support BACS transactions <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      7349 | Unable to upload selected file - virus detected. <em>[Upload Mandate Document](#operation/putPdfFileUsingPOST)</em>
      7350 | Originator Account Name contains incorrect characters to create given account type <em>[Create account](#operation/addAccountUsingPOST)</em>
      8888 | Input validation errors occurred. Please check details  <em>[Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST),[Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      9001 | Invalid Domestic Account Number <em>[Validate Domestic Account](#operation/validateDomesticAccountUsingPOST)</em>
      9002 | None-SEPA country IBAN has been provided <em>[Create mandate](#operation/addMandateUsingPOST), [Update mandate](#operation/editMandateUsingPUT)</em>
      9999 | Resource validation error <em>[Create direct debit and mandate](#operation/addSinglePaymentMOTFUsingPOST),[Create payment schedule and mandate](#operation/addPaymentScheduleUsingPOST_1)</em>
      10002 | Request parameters not valid <em>[Upload file](#operation/uploadFileUsingPOST)</em>
  - name: Pagination
    description: |-

      Nuapay API utilizes offset-based pagination for endpoints returning a collection of resources.

      Pagination parameters can be passed in URI for GET requests and in Body in POST requests.

      To control pagination, simply include either of 'Page Number' and 'Page Size'  parameters in a request. In the supported responses there will always be a page section added, describing the pagination settings used.

      <aside class='notice'>
      NOTE: the default value for Page Size is 20 and the maximum value you can set is 100.
      </aside>


      <br>
      # In URI 

      There are two parameters that control pagination: `pagenumber`, which specifies the page number to retrieve, and `pagesize`, which indicates how many records each page should contain. 
       
       <br> 
      # In Body 
        
      Path | Type |  Description
      ---- | ---- | -----------
      page.pageNumber<em>required</em>| Number | Holds page number to be returned. Default: 1
      page.pageSize<em>required</em>| Number | Holds page size to be returned. Default: 20

      <br> 
      > e.g. show the 1st page with a maximum of 10 entries per page from all of the available mandates:

      ```bash
      $ curl 'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/?pagesize=10&pagenumber=1' \
        -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
      ```
      ``` java
      ListMandatesRequestParameters listMandatesRequestParameters = 
        new ListMandatesRequestParameters();
      listMandatesRequestParameters.setPageSize(10);
      listMandatesRequestParameters.setPageNumber(1);

      ListMandatesResponse listMandatesResponse = 
        mandateService.listMandates('46pkx7o9n5', listMandatesRequestParameters);
      ```

      > the response will be:

      ``` http
      HTTP/1.1 200 OK
      Content-Type: application/json

      {
        'uri' : '/schemes/46pkx7o9n5/mandates',
        'data' : [ {
          'id' : '46pkxn8e9n',
          'uri' : '/schemes/8g3o2yyk2w/mandates/46pkxn8e9n',
          'mandateId' : 'b8b7ee91-b403-4ecb-9d98-059746dd8149',
          'debtorName' : 'Debtor Name',
          'debtorIBAN' : 'GB94SELN00999976543215',
          'debtorMobileNumber' : '0360321312312',
          'mandateStatus' : 'ACTIVE',
          'creationDate' : '2015-07-21'
        }, {
          'id' : 'nx9kndaejm',
          'uri' : '/schemes/8g3o2yyk2w/mandates/nx9kndaejm',
          'mandateId' : 'a04ee152-505d-4125-b671-5c5318b53842',
          'debtorName' : 'Debtor Name',
          'debtorIBAN' : 'GB94SELN00999976543215',
          'debtorMobileNumber' : '0360321312312',
          'mandateStatus' : 'ACTIVE',
          'creationDate' : '2015-07-21'
        }, {
          'id' : 'vw7kj9gey5',
          'uri' : '/schemes/8g3o2yyk2w/mandates/vw7kj9gey5',
          'mandateId' : '79839287-54d8-4fab-99cc-cf1808b7a766',
          'debtorName' : 'Debtor Name',
          'debtorIBAN' : 'GB94SELN00999976543215',
          'debtorMobileNumber' : '0360321312312',
          'mandateStatus' : 'ACTIVE',
          'creationDate' : '2015-07-21'
        } ],
        'page' : {
          'pageNumber' : 1,
          'pageSize' : 3,
          'totalElements' : 3,
          'totalPages' : 1
        },
        'sort' : [ ]
      }
      ```
  - name: Current Version
    description: |-
      The current version of the Nuapay API is version 1.0. Changes may occur to this version of the API without a change in version number if such a change follows our backwards compatibility guidelines. Different versions will be managed via a HTTP header indicating the version of the API which the client is using.

      Requests with no version number or an unmatched version number will be treated as version 1.0 requests.
  - name: Backwards Compatibility
    description: |-
      The following changes are considered backwards compatible:

      * Adding new API endpoints, new endpoints are independent,
      * Adding new optional request parameters to existing API calls, 
      * Adding new response properties to existing API calls. You should pay particular attention to this point if you are mapping your JSON responses to another programming language construct,
      * Changing of the property order in existing API responses,
      * Changing the length of object IDs (object IDs will never exceed 255 characters),
      * Changing the messages returned by validation or other error messages,
      * Output Encoding Rules are applied to some services and will be applied to all services in the future.
  - name: Changelog
    description: |-
      ## 2024-12-31
      * Removed CT and Beneficiary endpoints
      ## 2023-05-13
      * Added holdingBank object to 'Validate Accounts' reponse
      
      ## 2022-05-13
      * Added structuredRemittanceInformation object to 'Create Credit Transfer' and 'Transaction' objects.
      
      ## 2021-01-04
      * Added missing error codes.
      ## 2018-07-27 
      * Introduced new 422 error codes, 7148, 7152, 7153 and 7154, for 'Create Credit Transfer' and 'Create Credit Transfer and Beneficiary' endpoints. 

      ## 2018-06-18
      * Introduced 'Credit Transfer and Beneficiary' endpoint which creates a beneficiary in Origix then a credit transfer in one action
      * Introduced 'Type' to 'Create Credit Transfer' and 'Create Credit Transfer and Beneficiary' endpoints which will be used to distinguish between standard and express (instant) payments

      ## 2018-05-30
      * Added `Transfers` object and POST 'Transfers' endpoint, allowing users with more than one Nuapay account to transfer funds between thier accounts.

      ## 2018-04-05
      * Introduced explanation of the 'Links' array to the 'Resources' section.

      ## 2018-01-22
      * Added `Originator GET` endpoint.

      ## 2017-09-14
      * Added `List Credit Transfers POST` endpoint.
      * Added `List Transactions` endpoint.

      ## 2017-10-20
      * Renamed the 'Accounts' API section containing 'Validate Domestic Account' & 'Validate IBAN' to 'Validate Account'
      * Introduced a new 'Accounts' section containing create, list and view account endpoints
      * Introduced a new 'Balances' section containing the 'List Account Balances' endpoint
      * Introduced error codes for the new 'Accounts' and 'Balances' endpoints
      * Removed 'https:/' from some endpoint definitions
      * Corrected the file format for the 'Generic CSV' DD file type to 'GC_SCHEME' in the 'Upload File' endpoint
      * Fixed 'Webhooks Overview' link in the 'Transaction' section
      * Merged the 'Authorization' section into the 'Security' section

      ## 2017-09-15
      * Introduced a JWS-Signature section for non-repudiation to the 'Security' page.
      * Restored the `Credit Transfer` and `Beneficiary` endpoints.

      ## 2017-09-14
      * Added `Transactions` section.
      * Added `View Schedule` service under `Payment Schedules` section.

      ## 2017-08-21
      * Updated `Direct Debit Object`. Always return `links` section.
      * Updated `Create Direct Debit`. Always return `links` section.
      * Updated `View Direct Debit`. Always return `links` section.
      * Updated `List Direct Debits`. Always return `links` section.
      * Updated `Revoke Direct Debit`. Always return `links` section.
      * Updated `Revoke All Direct Debits`. Always return `links` section.
      * Updated `Re-present Failed Direct Debit`. Always return `links` section.
      * Updated `Direct Debit Object`. Always return `rejectDetails` object.
      * Updated `Create Direct Debit & Mandate`. Always return `rejectDetails` object.
      * Updated `Retrieve Direct Debit`. Always return `rejectDetails` object.
      * Updated `List Direct Debits`. Always return `rejectDetails` object
      * Updated `Revoke Direct Debit`. Always return `rejectDetails` object
      * Updated `Re-present Failed Direct Debit`. Always return `rejectDetails` object

      ## 2017-08-15
      * Removed `E-Mandates` section as this is covered in it's own API documentation. See the [Useful Links](#useful-links) for a link to the E-Mandate API documentation.

      ## 2017-08-14
      * Updated `Resources` section. Added more details on Resource Id.

      ## 2017-07-12
      * Updated `Error Codes`. Added codes `7129`, `7130`.

      ## 2017-07-05

      * Temporarily removed `Credit Transfer` and `Beneficiary` endpoints.

      ## 2017-05-29
      * Updated `Direct Debit Object`. Removed `INVALID` Status.

      ## 2017-05-24
      * Updated `Validate Domestic Account`. Return `domesticBranchCode` also if null
      * Updated `Validate IBAN`. Return `domesticBranchCode` also if null
      * Updated `Create Credit Transfer`. Always return `paymentCurrency`
      * Updated `List Credit Transfers`. Always return `paymentCurrency`
      * Updated `Direct Debit Object`. Always return `scheduleId` and `originalEndToEndId`
      * Updated `Create Direct Debit`. Always return `scheduleId` and `originalEndToEndId`
      * Updated `Create Direct Debit & Mandate`. Always return `scheduleId` and `originalEndToEndId`
      * Updated `Retrieve Direct Debit`. Always return `scheduleId` and `originalEndToEndId`
      * Updated `List Direct Debits`. Always return `scheduleId` and `originalEndToEndId`
      * Updated `List Failed Direct Debits`. Always return `scheduleId` and `originalEndToEndId`
      * Updated `Revoke Direct Debit`. Always return `scheduleId` and `originalEndToEndId`
      * Updated `Re-present Failed Direct Debit`. Always return `scheduleId` and `originalEndToEndId`
      * Updated `Create Schedule`. Always return `paymentDayOfWeek`,`paymentWeekOfMonth`, `paymentDateInMonth`, `paymentCustomFrequency`.
      * Updated `Create Schedule & Mandate`. Always return `paymentDayOfWeek`,`paymentWeekOfMonth`, `paymentDateInMonth`, `paymentCustomFrequency`
      * Updated `Upload file`. Added returned parameters `originalFileName`, `newFileName`
        
      ## 2017-04-11
      * Updated `Create Payment Schedule Object`. Added `settlement date shift` property to request.
      * Updated `Create Direct Debit Object`. Added `settlement date shift` property to request.
      * Updated `Create Payment Schedule and Mandate`. Added `settlement date shift` property to request.
      * Updated `Create Direct Debit and Mandate`. Added `settlement date shift` property to request.
      * Updated `Error Codes`. Added codes `7125`, `7126`,`7127`.
      * Updated `List Credit Transfers` request parameters. Added `originatoriban`.
      ## 2017-03-10
      * Updated `List Mandates` section, removed defaults from query parameters for `createdatefrom` and `createdateto` under `List Mandates`,  updated `mandatestatus` description that supports multiple statuses filtering within single request.
      * Updated `Upload Mandate Document` added note on `json` request part.
      * Added `Create Direct Debit and Mandate` section. 
      * Updated `List Direct Debits` section, removed defaults from URI parameters for `actualcollectiondatefrom` and `actualcollectiondateto`, updated `paymentstatus` description that supports  multiple statuses filtering within a single request.
      * Added `Create Payment Schedule and Mandate` section.
      * Updated `Create Payment Schedule Object`section. `paymentScheduleStatus` property is now returned by `Create Payment Schedule` service.
      * Updated `Errors` section. Extended response object  section with `details` array.
      * Updated `Error Codes`. Added codes `7123`, `7124`,`7128`,`8888`,`9999`.
      * Updated `List Credit Transfers` section. Updated `paymentstatus` description that supports  multiple statuses filtering within single request.
      * Updated `Credit Transfer Object` section. `beneficiaryName`,`beneficiaryIban` property is now returned by  `Create Credit Transfer` service.

      ## 2017-03-01
      * Removed `List Beneficiary Object` from `Beneficiaries` section. `List Beneficiaries` service returns `Beneficiary Object` at the moment. 
      * Added `List Credit Transfers` service description to `Credit Transfers` section.
      * Updated `Payment Schedule Object`, `twoPaymentsSamePeriod` property description. 

      ## 2017-01-10
      * Updated `List Mandates` section. Additional details added to description of `createdatefrom` parameter.
      * Updated `paymentAmount`property description across different sections. Added details of decimal separator and decimal places. 
      * Added `Credit Transfers`  section.
      * Updated `Payment Schedule` section with `List Payment Schedules` and `Cancel Payment Schedule`. Additional details added to  `Payment Schedule Object` including new response only property and description of amount fields.
      * Updated `Error Codes` section. Added codes 7111-7120. Fixed description for code 7103.
      * Updated `Direct Debits` section. Additional details added to description of `actualcollectiondatefrom` and `actualcollectiondateto` parameters.
      * Added description of `List Mandate Object`.
      * Updated `Update Mandate` section with more details on service behaviour.
      * Removed reference to `COR1` Scheme Type as it is not supported anymore.
      * Update to `Definition` sections across different enpoints. More consistent method and resource URI presentation.

      ## 2016-07-20
      * Fixed an error in the e-mandate signature URL, corrected URL should read, https://api.nuapay.com/emandate/web/show?token=XXXX

      ## 2016-06-29
      * Some additional existing error codes can now affect the `Prepare E-Mandate` service depending on configuration, see `Error Codes` section for details.

      ## 2016-05-06
      * Updated a number of examples using the -curl command, moving parameters using `-d` into the URL.
      * Added a `Useful Links` section with links to other relevant Nuapay integration documents.

      ## 2016-04-12
      * Updated Mandate Object `mandateInfo.status` and List Mandate `mandatestatus` with READY_FOR_EXPORT and EXPORTED status.

      ## 2016-04-11
      * Removed `v1` from endpoints

      ## 2016-04-03
      * Added `Versioning` section.
      * Updated request URI's based on versioning.

      ## 2016-01-21
      * Added `Security` section,
      * Added `Upload mandate document` service under `Mandates` section.
      * Added `E-Mandate Signature URLs` under `E-Mandates` section.
      * Updated `Error Codes` section. Added codes 7102 - 7110.

      ## 2015-11-19
      * Added `E-Mandates` section.
      * Fix for `List Direct Debits` request parameters. 
      * Updated `scheduleId` property to `String`.
      * Added `Beneficiary list` object.
      * Added `mandateInfo.status` and `mandateInfo.creationDate` to `Mandate` object.
      * Added `Failed Direct Debit` object.
      * Added [NuaPay Java Rest Client](https://github.com/sentenial/nuapay-rest-client)  lib examples.

      ## 2015-09-30
      * Added `Beneficiaries` section.
      * Updated `Add Payment Schedule` object. The payment schedule supports now `CUSTOM` frequency. New `paymentCustomFrequency`  and `twoPaymentsSamePeriod` properties added.
      * Updated `Mandate` object. Added supported `language` property values.
      * Updated `Error Codes` section. Added codes 7078-7089, 7098-7101.
      * Updated `Accounts` section. New `Validate IBAN` service  added. Defined `Account` object.
      * Added `Backwards Compatibility` section.

      ## 2015-09-01
      * API public release.
x-tagGroups:
  - name: Generial Info
    tags:
      - Introduction
      - Getting Started
      - API Endpoints
  - name: Security
    tags:
      - Authentication
      - Output Encoding Rules
      - JWS-Signature Header
  - name: Resources
    tags:
      - Returned Resources
      - Resource IDs
      - Links
  - name: Direct Debits APIs
    tags:
      - Creditor Schemes
      - Mandates
      - Direct Debits
      - Payment Schedules
  - name: Nuapay Accounts APIs
    tags:
      - Accounts
      - Balances
      - Transactions
      - Transaction Types
      - Transfers
  - name: Other APIs
    tags:
      - Files
      - Validate Accounts
      - Other
  - name: Responses
    tags:
      - About Responses
      - HTTP Status Codes
      - Errors
      - Error Codes
      - Pagination
  - name: Versioning
    tags:
      - Current Version
      - Backwards Compatibility
  - name: Change log
    tags:
      - Changelog
paths:
  /accounts:
    post:
      tags:
        - Accounts
      summary: Create Account
      description: |-
        POST request used to register or create account depending on the Originator configuration. A request must contain the application/json content type.

        Important Note: The 'identification' parameter and associated sub-parameters should be used only when creating a non-Nuapay account.
      operationId: addAccountUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: addAccountRequest
          description: addAccountRequest
          required: true
          schema:
            $ref: "#/definitions/AddAccountRequest"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfAccountResponseEntity"
          examples:
            application/json:
              uri: /accounts/6bee3razby
              data:
                id: 6bee3razby
                uri: /accounts/6bee3razby
                name: Test Account
                actualHolderName: Originator
                currency: EUR
                type: CURRENT_ACCOUNT
                status: ACTIVE
                identification:
                  iban: GB35SELN00999903769154
                  domesticAccountNumber: "03769154"
                  domesticBankCode: null
                  domesticBranchCode: "009999"
                  domesticCheckSum: null
                  domesticAccountCountry: GB
                  bic: GENODESELNGB21XXXF1P17
                secondaryIdentification: REST ACC
                links: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "7131"
                  field: type
                  description: Field is invalid or max length is exceeded
                  resourceUri: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "9999"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "7075"
                  field: identification.domesticAccountNumber
                  description: Domestic Account Number is required if IBAN is not provided
                  resourceUri: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - accounts
        - MerchantApiKey: []
  /accounts/list:
    post:
      tags:
        - Accounts
      summary: List Accounts
      description: |-
        POST request used to retrieve a list of accounts in a secured way. Query parameters are passed in the JSON body object. A request must contain the application/json content type.
        Important Note: Since this is a POST endpoint with only optional parameters when not providing any parameters user must supply an empty JSON body using {}.
      operationId: listAccountsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: listAccountRequest
          description: listAccountRequest
          required: true
          schema:
            $ref: "#/definitions/ListAccountRequestEntity"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfAccountResponseEntity"
          examples:
            application/json:
              uri: /accounts/list
              data:
                - id: 6bee3razby
                  uri: /accounts/6bee3razby
                  name: Test Account
                  actualHolderName: Origiantor
                  currency: EUR
                  type: CURRENT_ACCOUNT
                  status: ACTIVE
                  externalId: 6p3ljpo7bv
                  identification:
                    iban: GB35SELN00999903769154
                    domesticAccountNumber: "03769154"
                    domesticBankCode: null
                    domesticBranchCode: "009999"
                    domesticChecksum: null
                    domesticAccountCountry: GB
                    bic: SELNGB21XXX
                  secondaryIdentification: REST ACC
                  links: [
                    {
                      "resourceType": "balances",
                      "id": null,
                      "uri": "/accounts/6p3ljpo7bv/balances"
                    }
                  ]
              page:
                pageNumber: 1
                pageSize: 10
                totalElements: 1
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "7131"
                  field: filter.queryString
                  description: Field is invalid or max length is exceeded
                  resourceUri: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7201"
              returnDescription: JWS-Signature is invalid.
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "9999"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "7051"
                  field: page.pageSize
                  description: Max page size is exceeded
                  resourceUri: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - accounts_read
        - MerchantApiKey: []
  /accounts/{accountId}:
    get:
      tags:
        - Accounts
      summary: View Account
      description: GET request used to retrieve a patricular account object identified by resource ID returned by Create or List Accounts services.
      operationId: viewAccountUsingGET
      produces:
        - application/json
      parameters:
        - name: accountId
          in: path
          description: Encoded Account ID  of the account to be viewed.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfAccountResponseEntity"
          examples:
            application/json:
              uri: /account/6bee3razby
              data:
                id: 6bee3razby
                uri: /account/6bee3razby
                name: Test Account
                actualHolderName: Originator
                currency: EUR
                type: CURRENT_ACCOUNT
                status: ACTIVE
                externalId: 6p3ljpo7bv
                identification:
                  iban: GB35SELN00999903769154
                  domesticAccountNumber: "03769154"
                  domesticBankCode: null
                  domesticBranchCode: "009999"
                  domesticChecksum: null
                  domesticAccountCountry: GB
                  bic: SELNGB21
                secondaryIdentification: "12REST ACC345"
                links: []
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - accounts_read
        - MerchantApiKey: []
  /accounts/{accountId}/subaccounts/list:
    post:
      tags:
        - Accounts
      summary: List Sub-Accounts for Master Account
      description: |-
        POST request used to retrieve a list of sub-accounts for master account in a secured way. Query parameters are passed in the JSON body object. A request must contain the application/json content type.

        Important Note: Since this is a POST endpoint with only optional parameters when not providing any parameters user must supply an empty JSON body using {}.
      operationId: listSubAccountsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: accountId
          in: path
          description: accountId
          required: true
          type: string
        - in: body
          name: listAccountRequest
          description: listAccountRequest
          required: true
          schema:
            $ref: "#/definitions/ListAccountRequestEntity"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfAccountResponseEntity"
          examples:
            application/json:
              uri: /accounts/6bee3razby/subaccounts/list
              data:
                - id: 6bee3razby
                  uri: /accounts/6bee3razby
                  name: OriginatorName
                  actualHolderName: OriginatorName re Customer
                  currency: EUR
                  type: SUB_ACCOUNT
                  externalId: 6p3ljpo7bv
                  identification:
                    iban: GB35SELN00999903769154
                    domesticAccountNumber: "03769154"
                    domesticBankCode: null
                    domesticBranchCode: "009999"
                    domesticChecksum: null
                    domesticAccountCountry: GB
                    bic: SELNGB21XXX
                  secondaryIdentification: REST ACC
                  links: []
              page:
                pageNumber: 1
                pageSize: 10
                totalElements: 1
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "7131"
                  field: filter.queryString
                  description: Field is invalid or max length is exceeded
                  resourceUri: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7201"
              returnDescription: JWS-Signature is invalid.
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "9999"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "7051"
                  field: page.pageSize
                  description: Max page size is exceeded
                  resourceUri: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - accounts_read
        - MerchantApiKey: [ ]
  /accounts/{accountId}/settlements:
    get:
      tags:
        - Accounts
      summary: List Account Settlements
      description: |-
        GET  request used to retrieve a list of settlements for  account in a secured way.
      operationId: listSettlementsUsingGET
      produces:
        - application/json
      parameters:
        - name: accountId
          in: path
          description: accountId
          required: true
          type: string
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
          default: 1
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20."
          default: 20
        - name: settlementamountfrom
          in: query
          description: Settlement Amount From
          required: false
          type: string
        - name: settlementamountto
          in: query
          description: Settlement Amount To
          required: false
          type: string
        - name: settlementdatefrom
          in: query
          description: Settlement Date From
          required: false
          type: string
          format: date
        - name: settlementdateto
          in: query
          description: Settlement Date To
          required: false
          type: string
          format: date
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ListAccountSettlementsResponse"
          examples:
            application/json:
              uri: /accounts/6bee3razby/settlements
              data:
                - id: j29p3kxabx
                  uri: /accounts/6bee3razby/settlements/j29p3kxabx
                  accountHolderName: Merchant Name
                  iban: GB35SELN00999903769154
                  settlementIban: FR7630006000011234567890189
                  currency: EUR
                  reserveForPayouts: 0.00
                  settlementDate: 2024-12-27
                  settlementRunDate: 2024-12-24T20:06:03.774Z
                  minimumBalance: 10.00
                  openingBalance: 10.00
                  closingBalance: 10.00
                  currentReserve: 0.00
                  previousReserve: 0.00
                  settlementAmount: 0.00
                  previousSettlementId: bbee3razby
                  floatExposure:
                    numberOfTransactions: 0
                    valueOfTransactions: 0.00
                    floatRate: 0.05
                    maxExposurePreFloat: 5000.00
                  settlementCreditTransfers: [ ]
                - id: abxq9opd2l
                  uri: /accounts/6bee3razby/settlements/abxq9opd2l
                  accountHolderName: Merchant2 Name
                  iban: GB35SELN00999903769154
                  settlementIban: FR7630006000011234567890189
                  currency: EUR
                  reserveForPayouts: 0.00
                  settlementDate: 2024-12-27
                  settlementRunDate: 2024-12-24T20:06:03.774Z
                  minimumBalance: 0.00
                  openingBalance: 10788.83
                  closingBalance: 1024.31
                  currentReserve: 1024.31
                  previousReserve: 0.00
                  settlementAmount: 14886.06
                  previousSettlementId: ybee3razby
                  floatExposure:
                    numberOfTransactions: 4
                    valueOfTransactions: 20486.16
                    floatRate: 0.05
                    maxExposurePreFloat: 5000.00
                  settlementCreditTransfers:
                    - id: 6bee3razby
                      uri: /credittransfers/6bee3razby
                      amount: 14886.06
                      currency: EUR
                      executionDate: 2024-12-27
              page:
                pageNumber: 1
                pageSize: 10
                totalElements: 1
                totalPages: 1
              sort: [ ]
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "7131"
                  field: settlementdatefrom
                  description: Field is invalid or max length is exceeded
                  resourceUri: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7201"
              returnDescription: JWS-Signature is invalid.
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "9999"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "7051"
                  field: pagesize
                  description: Max page size is exceeded
                  resourceUri: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
            - accounts_settlements_read
        - MerchantApiKey: [ ]
  /accounts/{accountId}/settlements/{settlementId}:
    get:
      tags:
        - Accounts
      summary: Retrieve Account Settlement
      description: |-
        GET  request used to retrieve a settlement for  account in a secured way.
      operationId: retrieveSettlementUsingGET
      produces:
        - application/json
      parameters:
        - name: accountId
          in: path
          description: accountId
          required: true
          type: string
        - name: settlementId
          in: path
          description: settlementId
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RetrieveAccountSettlementResponse"
          examples:
            application/json:
              uri: /accounts/6bee3razby/settlements/abxq9opd2l
              data:
                id: abxq9opd2l
                uri: /accounts/6bee3razby/settlements/abxq9opd2l
                accountHolderName: Merchant2 Name
                iban: GB35SELN00999903769154
                settlementIban: FR7630006000011234567890189
                currency: EUR
                reserveForPayouts: 0.00
                settlementDate: 2024-12-24
                settlementRunDate: 2024-12-24T20:06:03.774Z
                minimumBalance: 0.00
                openingBalance: 10788.83
                closingBalance: 1024.31
                currentReserve: 1024.31
                previousReserve: 0.00
                settlementAmount: 14886.06
                previousSettlementId: ybee3razby
                floatExposure:
                  numberOfTransactions: 4
                  valueOfTransactions: 20486.16
                  floatRate: 0.05
                  maxExposurePreFloat: 5000.00
                settlementCreditTransfers:
                  - id: 6bee3razby
                    uri: /credittransfers/6bee3razby
                    amount: 14886.06
                    currency: EUR
                    executionDate: 2024-12-27
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7201"
              returnDescription: JWS-Signature is invalid.
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
            - accounts_settlements_read
        - MerchantApiKey: [ ]
  /accounts/{accountId}/balances:
    get:
      tags:
        - Balances
      summary: List Account Balances
      description: A GET request is used to retrieve patricular account balances
      operationId: viewAccountBalancesUsingGET
      produces:
        - application/json
      parameters:
        - name: accountId
          in: path
          description: Encoded account id of the account whos balances are to be viewed.
          required: true
          type: string
        - name: dateuntil
          in: query
          description: "Epoch timestamp format date until which the balance should be returned. Default: current date."
          required: false
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestCollectionResponseEnvelopeOfListAccountBalanceResponseEntity"
          examples:
            application/json:
              uri: /accounts/rmpa5ve4m6/balances
              data:
                - uri: /accounts/rmpa5ve4m6/balances
                  balance:
                    amount: 1000
                    currency: EUR
                    creditDebitIndicator: CREDIT
                    type: BOOKED_BALANCE
                  timestamp: "1513083481996"
                  links: []
                - uri: /accounts/rmpa5ve4m6/balances
                  balance:
                    amount: 1000
                    currency: EUR
                    creditDebitIndicator: CREDIT
                    type: AVAILABLE_BALANCE
                  timestamp: "1513083481996"
                  links: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                code: "7131"
                field: dateuntil
                description: Field is invalid or max length is exceeded
                resourceUri: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - accounts_read
        - MerchantApiKey: []
  /accounts/{accountId}/transactions/list:
    post:
      tags:
        - Transactions
      summary: List Transactions
      description: |-
        POST request used to retrieve a list of Transactions associated to an account.

        Important note: Since this is a POST endpoint with only optional parameters when not providing any parameters user must supply an empty JSON body using {}.
      operationId: listTransactionsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: accountId
          in: path
          description: Encoded Account Id of the account whos transactions are to be viewed.
          required: true
          type: string
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: "#/definitions/ListNuapayAccountTransactionsRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ListAccountTransactionsResponse"
          examples:
            application/json:
              uri: /accounts/w24y3dzo2p/transactions/
              data:
                id: bzja3ye692
                uri: /accounts/w24y3dzo2p/transactions/bzja3ye692
                postingDate: "2018-02-07"
                transactionType: OUTGOING_CREDIT_TRANSFER
                valueDate: "2018-02-07"
                amount: 1
                currency: EUR
                creditDebitIndicator: DEBIT
                purposeCode: null
                endToEndId: endToEndId1
                mandateReference: null
                ultimateCreditorId: null
                ultimateCreditorName: null
                ultimateDebtorId: null
                ultimateDebtorName: null
                reasonCode: null
                reasonProprietary: null
                bulkMessageId: null
                batchReference: null
                unstructuredRemittanceInformation: null
                remittanceInfo: remittanceInfo
                schemeType: null
                numberOfTransactions: null
                totalAmount: null
                balanceAfterTransaction:
                  amount: 23781.16
                  currency: EUR
                  creditDebitIndicator: CREDIT
                  type: BOOKED_BALANCE
                  timestamp: 1652956321012
                counterparty:
                  name: Originator Name
                  address:
                    line1: Originator Address Line1
                    line2: Originator Address Line2
                    postalCode: "123123"
                    town: Originator Town
                    country: PL
                  account:
                    iban: GB89SELN00999940483361
                    bic: SELNGB21
                    domesticAccountCountry: null
                    domesticAccountNumber: null
                    domesticBankCode: null
                    domesticBranchCode: null
                    domesticCheckSum: null
                creationDateTime: "2022-05-19T10:32:01Z"
                creationTimestamp: 1652956321000
                links: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                code: 7052
                field: page.pageSize
                description: Page size is invalid
                resourceUri: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7208"
              returnDescription: "Value Date From' must be earlier or equal to 'Value Date To'"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - account_transaction_view
        - MerchantApiKey: []
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      tags: 
        - Transactions
      description: |-
        GET request used to retrieve a transaction.
      summary: Retrieve transaction
      operationId: viewTransactionUsingGET
      produces:
      - application/json
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        type: string
      - name: transactionId
        in: path
        description: transactionId
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RestResponseEnvelopeOfViewAccountTransactionResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: '10091'
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: '10093'
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      x-sentenial:
        enriched: true
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
      - MerchantOAuth2:
        - account_transaction_view
      - MerchantApiKey: []
  /batches/{batchId}/recall:
    post:
      tags:
        - Credit Transfers
      summary: Recall Credit Transfer Batch
      description: |-
        POST request used to recall Credit Transfer type Batch.
      operationId: recallCreditTransferBatchUsingPOST
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: batchId
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CreditTransferBatchRecallResponseEnvelope"
          examples:
            uri: /batches/w24y5qgv2p/recall
            data:
              id: w24y5qgv2p
              uri: /files/j29pwvl5bx/batches/w24y5qgv2p
              batchReference: CRCUR09052023IE98ULSB98644073416-5
              status: RECALLED
              creationDateTime: 2023-05-10T21:19:29.000Z
              dueDate: 2023-05-09
              numberOfTransactions: 2
              valueOfTransactions: 2.0
              rejectionReason: null
              links:
                -
                  id: null
                  resourceType: transactions
                  uri: /files/j29pwvl5bx/batches/w24y5qgv2p/transactions
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "0000"
              returnDescription: Batch ID missing
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: '0000'
              returnDescription: Batch Validation Error
              details:
              - code: 0000
                description: Batch is in invalid state for this operation
                field: null
                resourceUri:
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - credittransfers
        - MerchantApiKey: []
  /directdebits:
    get:
      tags:
        - Direct Debits
      summary: List Originator Direct Debits
      description: A GET request is used to retrieve collection of direct debits. Lists all direct debits associated to an originator.
      operationId: listDirectDebitsOrganizationUsingGET
      produces:
        - application/json
      parameters:
        - name: endtoendid
          in: query
          description: Used to filter direct debits by provided End To End Id.
          required: false
          type: string
        - name: actualcollectiondatefrom
          in: query
          required: false
          type: string
          format: date
          description: Actual Collection Date From, Format yyyy-mm-dd.
        - name: actualcollectiondateto
          in: query
          required: false
          type: string
          format: date
          description: Actual Collection Date To, Format yyyy-mm-dd.
        - name: orderby
          in: query
          required: false
          type: string
          description: Order query by, default 'id' in descending order.
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
          default: 1
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20"
          default: 20
        - name: paymentstatus
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - ALL
            - READY_FOR_EXPORT
            - EXPORTING
            - REVOKED
            - EXPORTED
            - ACCEPTED
            - REVERSED
            - REFUSED
            - REJECTED
            - RETURNED
            - REFUNDED
            - CANCELLED
            - PENDING
            - PENDING_SETTLEMENT
            - REPRESENTED
          description: A number of statuses can be queried within single request by providing multiple occurance of the parameter.
        - name: scheduleid
          in: query
          required: false
          type: string
          maxLength: 19
          description: The Payment Schedule ID of a specific DD. Used to filter direct debits under particular Payment Schedule
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfListDirectDebitResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits
              data:
                - id: j29p3kpabx
                  uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
                  scheduleId: null
                  endToEndId: "1234567876543234567"
                  paymentAmount: 5000.01
                  requestedCollectionDate: "2015-08-12"
                  actualCollectionDate: "2015-08-12"
                  exportDate: "2015-08-05"
                  remittanceInformation: Remittance Information
                  originalEndToEndId: null
                  representationAttemptNumber: 0
                  paymentStatus: READY_FOR_EXPORT
                  rejectDetails:
                    rejectReason: null
                    rejectDescription: null
                    rejectType: null
                    rejectDate: null
                  links:
                    - resourceType: mandate
                      id: w24y3dya2p
                      uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                    - resourceType: scheme
                      id: abxq9kq52l
                      uri: /schemes/abxq9kq52l
              page:
                pageNumber: 1
                pageSize: 20
                totalElements: 1
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7001"
              returnDescription: paymentstatus is invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7002"
              returnDescription: "'From Date' must be earlier or equal to 'To Date'"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebits_read
        - MerchantApiKey: []
  /faileddirectdebits:
    get:
      tags:
        - Direct Debits
      summary: List Failed Direct Debits
      description: A GET request used to list failed direct debits.
      operationId: listFailedDirectDebitUsingGET
      produces:
        - application/json
      parameters:
        - name: rejectcreatefrom
          in: query
          required: true
          type: string
          format: date
          description: Direct Debit rejected from. In format, 'yyyy-mm-dd'. The maximum date rang is 30 days.
        - name: rejectcreateto
          in: query
          required: true
          type: string
          format: date
          description: Direct Debit rejected to. In format, 'yyyy-mm-dd'. The maximum date rang is 30 days.
        - name: technicalrejects
          in: query
          required: false
          type: boolean
          description: Where false returns only bank rejections and true returns all rejections including OCX rejections and file import rejections.
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestCollectionResponseEnvelopeOfFailedDirectDebitResponse"
          examples:
            application/json:
              uri: /faileddirectdebits
              data:
                - id: a2rexqrdmq
                  uri: /schemes/abxq93kk2l/mandates/wbv7x6zvb7/directdebits/a2rexqrdmq
                  creditorScheme:
                    schemeType: CORE
                    creditorSchemeId: "1234"
                  mandateInfo:
                    mandateId: MAND000050851137B
                    domesticMandateId: null
                  directDebitInfo:
                    endToEndId: e2eId
                    scheduleId: null
                    paymentAmount: 456
                    requestedCollectionDate: "2017-06-13"
                    actualCollectionDate: "2017-06-13"
                    exportDate: "2017-06-12"
                    remittanceInfo: null
                    originalEndToEndId: null
                    representationAttemptNumber: 0
                    paymentStatus: REJECTED
                  rejectDetails:
                    rejectReason: MD07
                    rejectDescription: Debtor deceased.
                    rejectType: Reject
                    rejectDate: "2017-09-12"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7002"
              returnDescription: "'From Date ' must be earlier or equal to 'To Date'"
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7003"
              returnDescription: "Max date range is exceeded"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebits_read
        - MerchantApiKey: []
  /files:
    post:
      tags:
        - Files
      summary: Upload file
      description: POST request used to upload a file. A request must contain the multipart/form-data content type with a json part containing input parameters in a JSON structure and a file part with file content.
      operationId: uploadFileUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: file
          in: formData
          description: file
          required: true
          type: file
        - name: json
          in: query
          description: json
          required: true
          type: string
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/UploadFileResponse"
          examples:
            application/json:
              uri: /files/abxq98pn2l
              data:
                id: abxq98pn2l
                uri: /files/abxq98pn2l
                originalFileName: Sample_Pain008_AA_001.xml
                newFileName: DD_GB86ZZZSDDSELN00000072112856048_CORE_P812_hgZ_Sample_Pain008_AA_001.xml.QUEUED
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7005"
              returnDescription: Max file size exceeded.
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7201"
              returnDescription: JWS-Signature is invalid.
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7007"
              returnDescription: Not allowed file format
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebits
        - MerchantApiKey: []
  /iban/validate:
    post:
      tags:
        - Validate Accounts
      summary: Validate Accounts
      description: |-
        POST request used to validate accounts. A request must contain the application/json content type. 

        To validate an account via IBAN provide the IBAN only.

        To validate a domestic account provide the relevant domestic account details.
      operationId: validateDomesticAccountUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: validationRequest
          description: validationRequest
          required: true
          schema:
            $ref: "#/definitions/AccountValidationRestEntity"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfAccountValidationResponseRestEntity"
          examples:
            application/json:
              uri: /iban/validate
              data:
                uri: /iban/validate
                iban: GB35SELN00999903769154
                domesticAccountNumber: "03769154"
                accountCountry: GB
                domesticBankCode: null
                domesticBranchCode: "009999"
                domesticCheckSum: null
                bic: SELNGB21XXX
                holdingBank:
                  institutionName: SENTENIAL LTD
                  branchName: Sentenial Ltd T/A Nuapay
                  address:
                    line1: 4th Floor
                    line2: 35 Great St Helen's
                    line3: London
                    postCode: EC3A 6AP
                  telephoneNumber: 0203 1788729
                  faxNumber: null
                  closureDate: null
                  redirectedTo: null
                links: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7098"
              returnDescription: Invalid IBAN
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: '7136'
              returnDescription: Account Validation Error
              details:
              - code: W0002
                description: Modulus check algorithm is unavailable for these account details
                field: iban
                resourceUri:
              - code: E0006
                description: Sort code is not allocated
                resourceUri:
                field: iban
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - account_validate
        - MerchantApiKey: []
  /mandates:
    get:
      tags:
        - Mandates
      summary: List Mandates
      description: A GET request is used to retrieve a collection of mandates.  Returns mandates associated with Organization.
      operationId: listOrganizationMandatesUsingGET
      produces:
        - application/json
      parameters:
        - name: createdatefrom
          in: query
          required: false
          type: string
          format: date
          description: Filter by mandate creation date from X date. Format yyyy-mm-dd. Maximum value is the current date - 365 days.
        - name: createdateto
          in: query
          required: false
          type: string
          format: date
          description: Filter by mandate creation date to X date. Format yyyy-mm-dd. Default is the current date.
        - name: debtoriban
          in: query
          required: false
          type: string
          pattern: '[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}'
          description: Filter by the Debtor IBAN
        - name: debtorname
          in: query
          required: false
          type: string
          maxLength: 70
          description: Filter by the Debtor Name
        - name: mandateid
          in: query
          required: false
          type: string
          maxLength: 35
          description: Filter by the Mandate Reference (UMR)
        - name: mandatestatus
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          description: Filter by mandate status
          enum:
            - ACTIVE
            - CANCELLED
            - COMPLETE
            - PENDING
            - UNREADABLE
            - UNSIGNED
            - SCREENING
            - SUSPENDED
            - READY_FOR_EXPORT
            - EXPORTED
        - name: orderby
          in: query
          required: false
          type: string
          description: Order query by, default 'id' in descending order.
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
          default: 1
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20"
          default: 20
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfListMandateRestResponseItem"
          examples:
            application/json:
              uri: /schemes/46pkx7o9n5/mandates
              data:
                - id: 46pkxn8e9n
                  uri: /schemes/8g3o2yyk2w/mandates/46pkxn8e9n
                  mandateId: BEL000049995012C
                  debtorName: Debtor Name
                  debtorIBAN: GB94SELN00999976543215
                  debtorMobileNumber: "0360321312312"
                  mandateStatus: PENDING
                  creationDate: "2015-07-21"
                  links: []
                - id: nx9kndaejm
                  uri: /schemes/8g3o2yyk2w/mandates/nx9kndaejm
                  mandateId: BEL000049995012S
                  debtorName: Debtor Name
                  debtorIBAN: GB94SELN00999976543215
                  debtorMobileNumber: "0360321312312"
                  mandateStatus: ACTIVE
                  creationDate: "2015-07-21"
                  links: []
                - id: vw7kj9gey5
                  uri: /schemes/8g3o2yyk2w/mandates/vw7kj9gey5
                  mandateId: BEL000049995012X
                  debtorName: Debtor Name
                  debtorIBAN: GB94SELN00999976543215
                  debtorMobileNumber: "0360321312312"
                  mandateStatus: ACTIVE
                  creationDate: "2015-07-21"
                  links: []
              page:
                pageNumber: 1
                pageSize: 20
                totalElements: 3
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7001"
              returnDescription: Date format invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7002"
              returnDescription: "'From Date' must be earlier or equal to 'To Date'"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates
        - MerchantApiKey: []
  /paymentschedules:
    get:
      tags:
        - Payment Schedules
      summary: List Originator Schedules
      description: A GET request used to retrieve a collection of payment schedules. Lists all payment schedules associated to an originator.
      operationId: listPaymentSchedulesOrganizationUsingGET
      produces:
        - application/json
      parameters:
        - name: orderby
          in: query
          required: false
          type: string
          description: Order query by, default 'id' in descending order.
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
          default: 1
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20"
          default: 20
        - name: paymentschedulestatus
          in: query
          required: false
          type: array
          enum:
            - ACTIVE
            - INACTIVE
            - CANCELLED
          description: |-
            If the parameters is not provided, all payment schedules are listed. 

            Note: The number of statuses can be queried within a single request by providing multiple occurances of the parameter.
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfPaymentScheduleResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq98zk2l/paymentschedules
              data:
                - id: 8b5g5pv82r
                  uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
                  scheduleId: "518052"
                  paymentFrequency: DAILY
                  paymentType: FIXED_LENGTH
                  startDate: "2017-09-05"
                  numberOfPayments: 2
                  paymentAmount: 9.9
                  firstPaymentAmount: 1.1
                  lastPaymentAmount: 9.9
                  remittanceInformation: remittanceInformation
                  paymentDayOfWeek: null
                  paymentWeekOfMonth: null
                  paymentDateInMonth: null
                  paymentCustomFrequency: null
                  twoPaymentsSamePeriod: true
                  paymentScheduleStatus: ACTIVE
                  links:
                    - resourceType: mandate
                      id: j29pj64jbx
                      uri: /schemes/abxq98zk2l/mandates/j29pj64jbx
                    - resourceType: scheme
                      id: abxq98zk2l
                      uri: /schemes/abxq98zk2l
                - id: j29pv8oabx
                  uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q/paymentschedules/j29pv8oabx
                  scheduleId: "518050"
                  paymentFrequency: DAILY
                  paymentType: FIXED_LENGTH
                  startDate: "2017-09-05"
                  numberOfPayments: 2
                  paymentAmount: 9.9
                  firstPaymentAmount: 1.1
                  lastPaymentAmount: 9.9
                  remittanceInformation: remittanceInformation
                  paymentDayOfWeek: null
                  paymentWeekOfMonth: null
                  paymentDateInMonth: null
                  paymentCustomFrequency: null
                  twoPaymentsSamePeriod: true
                  paymentScheduleStatus: ACTIVE
                  links:
                    - resourceType: mandate
                      id: ybo8zd8j2q
                      uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q
                    - resourceType: scheme
                      id: abxq98zk2l
                      uri: /schemes/abxq98zk2l
              page:
                pageNumber: 1
                pageSize: 20
                totalElements: 2
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7118"
              returnDescription: Payment schedule status is invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7051"
              returnDescription: Max page size is exceeded
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2: 
          - directdebit_schedules_read
        - MerchantApiKey: []
  /pendingapprovals/{approvalId}:
    get:
      tags:
        - Other
      summary: List Pending Approvals
      description: GET request used to retrieve a list of Pending Approvals.
      operationId: listPendingApprovalsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: approvalId
          in: path
          description: approvalId
          required: true
          type: string
      responses:
        '501':
          description: Not implemented
      security:
        - MerchantOAuth2: []
        - MerchantApiKey: []
  /schemes:
    get:
      tags:
        - Creditor Schemes
      summary: List Creditor Schemes
      description: A GET request used to retrieve a list of Creditor Schemes.
      operationId: listCreditorSchemesUsingGET
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestCollectionResponseEnvelopeOfCreditorSchemeResponseEntity"
          examples:
            application/json:
              uri: /schemes
              data:
                - id: abxq9kq52l
                  uri: /schemes/abxq9kq52l
                  creditorSchemeId: BE31ZZZ12345
                  schemeType: CORE
                  creditorSchemeName: Nuapay Scheme
                  links: []
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - schemes_read
        - MerchantApiKey: []
  /schemes/{schemeId}/directdebits:
    get:
      tags:
        - Direct Debits
      summary: List Scheme Direct Debits
      description: A GET request is used to retrieve collection of direct debits. Lists all direct debits associated to a scheme.
      operationId: listDirectDebitsSchemeUsingGET
      produces:
        - application/json
      parameters:
        - name: endtoendid
          in: query
          description: Used to filter direct debits by provided End To End Id.
          required: false
          type: string
        - name: actualcollectiondatefrom
          in: query
          required: false
          type: string
          format: date
          description: Actual Collection Date From, Format yyyy-mm-dd.
        - name: actualcollectiondateto
          in: query
          required: false
          type: string
          format: date
          description: Actual Collection Date To, Format yyyy-mm-dd.
        - name: orderby
          in: query
          required: false
          type: string
          description: Order query by, default 'id' in descending order.
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
          default: 1
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20"
          default: 20
        - name: paymentstatus
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - ALL
            - READY_FOR_EXPORT
            - EXPORTING
            - REVOKED
            - EXPORTED
            - ACCEPTED
            - REVERSED
            - REFUSED
            - REJECTED
            - RETURNED
            - REFUNDED
            - CANCELLED
            - PENDING
            - PENDING_SETTLEMENT
            - REPRESENTED
          description: A number of statuses can be queried within single request by providing multiple occurance of the parameter.
        - name: scheduleid
          in: query
          required: false
          type: string
          description: The Payment Schedule ID of a specific DD. Used to filter direct debits under particular Payment Schedule.
          maxLength: 19
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the direct debit is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfListDirectDebitResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits
              data:
                - id: j29p3kpabx
                  uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
                  scheduleId: null
                  endToEndId: "1234567876543234567"
                  paymentAmount: 5000.01
                  requestedCollectionDate: "2015-08-12"
                  actualCollectionDate: "2015-08-12"
                  exportDate: "2015-08-05"
                  remittanceInformation: Remittance Information
                  originalEndToEndId: null
                  representationAttemptNumber: 0
                  paymentStatus: READY_FOR_EXPORT
                  rejectDetails:
                    rejectReason: null
                    rejectDescription: null
                    rejectType: null
                    rejectDate: null
                  links:
                    - resourceType: mandate
                      id: w24y3dya2p
                      uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                    - resourceType: scheme
                      id: abxq9kq52l
                      uri: /schemes/abxq9kq52l
              page:
                pageNumber: 1
                pageSize: 20
                totalElements: 1
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7063"
              returnDescription: paymentstatus is invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7002"
              returnDescription: "'From Date ' must be earlier or equal to 'To Date'"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebits_read
        - MerchantApiKey: []
    post:
      tags:
        - Direct Debits
      summary: Create Direct Debit & Mandate
      description: A POST request used to create direct debits and mandates within a single request. A request must contain the application/json content type. In the request body you must provide a JSON structure describing the Direct Debit and Mandate.
      operationId: addSinglePaymentMOTFUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: addSinglePaymentRequest
          description: addSinglePaymentRequest
          required: true
          schema:
            $ref: "#/definitions/AddSinglePaymentMOTFRequestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme that the Mandate and Direct Debit will be associated to.
          required: true
          type: string
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfAddSinglePaymentResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq98zk2l/mandates/wbv7e9dkb7/directdebits/6bz34xwomd
              data:
                id: 6bz34xwomd
                uri: /schemes/abxq98zk2l/mandates/wbv7e9dkb7/directdebits/6bz34xwomd
                scheduleId: null
                endToEndId: "12345678876543234567"
                paymentAmount: 5000.01
                requestedCollectionDate: "2017-09-03"
                actualCollectionDate: "2017-09-05"
                exportDate: "2017-08-22"
                remittanceInformation: Remittance Information
                originalEndToEndId: null
                representationAttemptNumber: 0
                paymentStatus: READY_FOR_EXPORT
                rejectDetails:
                  rejectReason: null
                  rejectDescription: null
                  rejectType: null
                  rejectDate: null
                links:
                  - resourceType: mandate
                    id: wbv7e9dkb7
                    uri: /schemes/abxq98zk2l/mandates/wbv7e9dkb7
                  - resourceType: scheme
                    id: abxq98zk2l
                    uri: /schemes/abxq98zk2l
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: "Input validation errors occurred. Please check details."
              details:
                - code: "7123"
                  field: mandate
                  description: Mandate object is required
                  resourceUri: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                - code: "2006"
                  field: mandate.creditorAccount.iban
                  description: The Creditor Account referenced within the file does not exist within the system
                  resourceUri: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2: 
          - directdebits
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates:
    get:
      tags:
        - Mandates
      summary: List Mandates
      description: A GET request is used to retrieve a collection of mandates. Returns mandates associated with Creditor Scheme.
      operationId: listSchemeMandatesUsingGET
      produces:
        - application/json
      parameters:
        - name: createdatefrom
          in: query
          required: false
          type: string
          format: date
          description: Filter by mandate creation date from X date. Format yyyy-mm-dd. Maximum value is the current date - 365 days.
        - name: createdateto
          in: query
          required: false
          type: string
          format: date
          description: Filter by mandate creation date to X date. Format yyyy-mm-dd. Default is the current date.
        - name: debtoriban
          in: query
          required: false
          type: string
          pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
          description: Filter by the Debtor IBAN
        - name: debtorname
          in: query
          required: false
          type: string
          maxLength: 70
          description: Filter by the Debtor Name
        - name: mandateid
          in: query
          required: false
          type: string
          maxLength: 35
          description: Filter by the Mandate Reference (UMR)
        - name: mandatestatus
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          description: Filters by mandate status
          enum:
            - ACTIVE
            - CANCELLED
            - COMPLETE
            - PENDING
            - UNREADABLE
            - UNSIGNED
            - SCREENING
            - SUSPENDED
            - READY_FOR_EXPORT
            - EXPORTED
        - name: orderby
          in: query
          required: false
          type: string
          description: "Order query by, default 'id' in descending order."
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
          default: 1
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20"
          default: 20
        - name: schemeId
          in: path
          description: ID of scheme to query mandates against
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfListMandateRestResponseItem"
          examples:
            application/json:
              uri: /schemes/46pkx7o9n5/mandates
              data:
                - id: 46pkxn8e9n
                  uri: /schemes/8g3o2yyk2w/mandates/46pkxn8e9n
                  mandateId: BEL000049995012C
                  debtorName: Debtor Name
                  debtorIBAN: GB94SELN00999976543215
                  debtorMobileNumber: "0360321312312"
                  mandateStatus: PENDING
                  creationDate: "2015-07-21"
                  links: []
                - id: nx9kndaejm
                  uri: /schemes/8g3o2yyk2w/mandates/nx9kndaejm
                  mandateId: BEL000049995012S
                  debtorName: Debtor Name
                  debtorIBAN: GB94SELN00999976543215
                  debtorMobileNumber: "0360321312312"
                  mandateStatus: ACTIVE
                  creationDate: "2015-07-21"
                  links: []
                - id: vw7kj9gey5
                  uri: /schemes/8g3o2yyk2w/mandates/vw7kj9gey5
                  mandateId: BEL000049995012X
                  debtorName: Debtor Name
                  debtorIBAN: GB94SELN00999976543215
                  debtorMobileNumber: "0360321312312"
                  mandateStatus: ACTIVE
                  creationDate: "2015-07-21"
                  links: []
              page:
                pageNumber: 1
                pageSize: 20
                totalElements: 3
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7001"
              returnDescription: Date format invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7002"
              returnDescription: "'From Date' must be earlier or equal to 'To Date'"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates_read
        - MerchantApiKey: []
    post:
      tags:
        - Mandates
      summary: Create Mandate
      description: |-
        A POST request used to create a mandate. The request must contain the 'application/json' content type. In the request body you must provide a JSON structure describing the Mandate.

        This request can be run in 'Validate' mode. When run in this mode the 'x-request-mode' = 'validate' header must be provided, this causes 'Validation' mode logic to trigger.
        In this mode the mandate request is validated but not created. If validation is successful responds with 204 No Content.
      operationId: addMandateUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: mandateRequest
          description: mandateRequest
          required: true
          schema:
            $ref: "#/definitions/RequestMandateRestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme to create the mandate against
          required: true
          type: string
        - name: x-request-mode
          in: header
          description: x-request-mode
          required: false
          type: string
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfResponseMandateRestEntity"
          examples:
            application/json:
              uri: /schemes/46pkx7o9n5/mandates/ne8y69wwpo
              data:
                id: ne8y69wwpo
                uri: /schemes/46pkx7o9n5/mandates/ne8y69wwpo
                debtor:
                  name: Debtor Name
                  address:
                    line1: Debtor Address Line1
                    line2: Debtor Address Line2
                    town: Debtor Town
                    postCode: "123123"
                    state: Debtor State
                    country: IE
                  language: fr_BE
                  email: debtor@email.com
                  phoneNumber: "0360123123123"
                  mobileNumber: "0360321312312"
                mandateInfo:
                  mandateId: "1234567899"
                  contractReference: Contract Reference
                  signatureLocation: Signature Location
                  signatureDate: "2015-07-21"
                  mandateType: RCUR
                  electronicSignatureDetails:
                    authorizationMethod: null
                    authorizationToken: null
                    authorizationEmail: null
                    authorizationMobileNumber: null
                    ipAddress: null
                    geographicLocation: null
                  emandateAuthenticationDetails:
                    authentication: AISP
                    authenticationReference: "2c8f2c6e9002"
                  status: PENDING
                  creationDate: "2015-07-21"
                  migratingMandate: false
                debtorAccount:
                  iban: GB94SELN00999976543215
                  bic: SELNGB21
                creditorAccount:
                  iban: GB47SELN00999912345678
                  bic: SELNGB21
        204:
          description: No Content
          examples:
            application/json: " "
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10002"
              returnDescription: Request parameters not valid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "2005"
              returnDescription: "Debtor Account Validation Error"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}:
    get:
      tags:
        - Mandates
      summary: Retrieve Mandate
      description: A GET request used to retrieve a mandate.
      operationId: viewMandateUsingGET
      produces:
        - application/json
      parameters:
        - name: mandateId
          in: path
          description: Mandate Id
          required: true
          type: string
        - name: schemeId
          in: path
          description: Scheme Id
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfResponseMandateRestEntity"
          examples:
            application/json:
              uri: /schemes/46pkx7o9n5/mandates/w24y3dya2p
              data:
                id: w24y3dya2p
                uri: /schemes/46pkx7o9n5/mandates/w24y3dya2p
                debtor:
                  name: Debtor Name
                  address:
                    line1: Debtor Address Line1
                    line2: Debtor Address Line2
                    town: Debtor Town
                    postCode: "123123"
                    state: Debtor State
                    country: IE
                  language: fr_BE
                  email: debtor@email.com
                  phoneNumber: "0360123123123"
                  mobileNumber: "0360321312312"
                mandateInfo:
                  mandateId: "1234567899"
                  contractReference: Contract Reference
                  signatureLocation: Signature Location
                  signatureDate: "2015-07-21"
                  mandateType: RCUR
                  status: PENDING
                  creationDate: "2015-07-21"
                  migratingMandate: false
                debtorAccount:
                  iban: GB94SELN00999976543215
                  bic: SELNGB21
                creditorAccount:
                  iban: GB47SELN00999912345678
                  bic: SELNGB21
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates_read
        - MerchantApiKey: []
    put:
      tags:
        - Mandates
      summary: Update Mandate
      description: |-
        A PUT request used to update mandates. The request must contain the application/json content type. In the request body you must provide a JSON structure describing the Mandate.

        NOTE: 
        Where an optional JSON object property is not provided it is treated as null. 
        Where an existing resource representation contains a value under that property it will get overwritten.
      operationId: editMandateUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate to be updated
          required: true
          type: string
        - in: body
          name: mandateRequest
          description: mandateRequest
          required: true
          schema:
            $ref: "#/definitions/RequestMandateRestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfResponseMandateRestEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
              data:
                id: w24y3dya2p
                uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                debtor:
                  name: Debtor Name
                  address:
                    line1: Debtor Address Line1
                    line2: Debtor Address Line2
                    town: " Debtor Town"
                    postCode: "123123"
                    state: Debtor State
                    country: IE
                  language: fr_BE
                  email: debtor@email.com
                  phoneNumber: "0360123123123"
                  mobileNumber: "0360321312312"
                mandateInfo:
                  mandateId: "1234567899"
                  contractReference: Contract Reference
                  signatureLocation: Signature Location
                  signatureDate: "2015-07-21"
                  mandateType: RCUR
                  status: PENDING
                  creationDate: "2015-07-21"
                  migratingMandate: false
                debtorAccount:
                  iban: GB94SELN00999976543215
                  bic: SELNGB21
                creditorAccount:
                  iban: GB47SELN00999912345678
                  bic: SELNGB21
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7026"
              returnDescription: "Debtor IBAN is invalid"
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "2005"
              returnDescription: "Debtor Account Validation Error"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/activate:
    post:
      tags:
        - Mandates
      summary: Activate Mandate
      description: |-
        A POST request used to activate a mandate. A request must contain the 'application/json' content type.

        You must provide a JSON structure describing the Mandate in the request body.
      operationId: activateMandateUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: mandateActivateRequest
          required: true
          schema:
            $ref: "#/definitions/MandateInfoRestEntity"
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate to be updated
          required: true
          type: string
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfResponseMandateRestEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/activate
              data:
                id: w24y3dya2p
                uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                debtor:
                  name: Debtor Name
                  address:
                    line1: Debtor Address Line1
                    line2: Debtor Address Line2
                    town: Debtor Town
                    postCode: "123123"
                    state: Debtor State
                    country: IE
                  language: fr_BE
                  email: debtor@email.com
                  phoneNumber: "0360123123123"
                  mobileNumber: "0360321312312"
                mandateInfo:
                  mandateId: "1234567899"
                  contractReference: Contract Reference
                  signatureLocation: Signature Location
                  signatureDate: "2015-07-21"
                  mandateType: RCUR
                  status: ACTIVE
                  creationDate: "2015-07-21"
                  migratingMandate: false
                debtorAccount:
                  iban: GB94SELN00999976543215
                  bic: SELNGB21
                creditorAccount:
                  iban: GB47SELN00999912345678
                  bic: SELNGB21
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: 7023
              returnDescription: Signature Location is invalid or max length is exceeded
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: 3022
              returnDescription: The Mandate cannot be Activated from its current state
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/cancel:
    post:
      tags:
        - Mandates
      summary: Cancel Mandate
      description: A POST request used to cancel a mandate.
      operationId: cancelMandateUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate to be updated
          required: true
          type: string
        - in: body
          name: requestBody
          required: true
          schema:
            $ref: "#/definitions/BaseOperationRestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfResponseMandateRestEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
              data:
                id: w24y3dya2p
                uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                debtor:
                  name: Debtor Name
                  address:
                    line1: Debtor Address Line1
                    line2: Debtor Address Line2
                    town: " Debtor Town"
                    postCode: "123123"
                    state: Debtor State
                    country: IE
                  language: fr_BE
                  email: debtor@email.com
                  phoneNumber: "0360123123123"
                  mobileNumber: "0360321312312"
                mandateInfo:
                  mandateId: "1234567899"
                  contractReference: Contract Reference
                  signatureLocation: Signature Location
                  signatureDate: "2015-07-21"
                  mandateType: RCUR
                  status: CANCELLED
                  creationDate: "2015-07-21"
                  migratingMandate: false
                debtorAccount:
                  iban: GB94SELN00999976543215
                  bic: SELNGB21
                creditorAccount:
                  iban: GB47SELN00999912345678
                  bic: SELNGB21
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
            returnCode: "7064"
            returnDescription: operationReason exceeds maximum length
            details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "3010"
              returnDescription: Mandate cannot be cancelled from its current state
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/directdebits:
    get:
      tags:
        - Direct Debits
      summary: List Mandate Direct Debits
      description: A GET request is used to retrieve collection of direct debits. Lists all direct debits associated to a mandate.
      operationId: listDirectDebitsSchemeMandateUsingGET
      produces:
        - application/json
      parameters:
        - name: endtoendid
          in: query
          description: Used to filter direct debits by provided End To End Id.
          required: false
          type: string
        - name: actualcollectiondatefrom
          in: query
          required: false
          type: string
          format: date
          description: Actual Collection Date From, Format yyyy-mm-dd.
        - name: actualcollectiondateto
          in: query
          required: false
          type: string
          format: date
          description: Actual Collection Date To, Format yyyy-mm-dd.
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate the Direct Debit is associated to.
          required: true
          type: string
        - name: orderby
          in: query
          required: false
          type: string
          description: Order query by, default 'id' in descending order.
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20"
        - name: paymentstatus
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - ALL
            - READY_FOR_EXPORT
            - EXPORTING
            - REVOKED
            - EXPORTED
            - ACCEPTED
            - REVERSED
            - REFUSED
            - REJECTED
            - RETURNED
            - REFUNDED
            - CANCELLED
            - PENDING
            - PENDING_SETTLEMENT
            - REPRESENTED
          description: A number of statuses can be queried within single request by providing multiple occurance of the parameter.
        - name: scheduleid
          in: query
          required: false
          type: string
          description: The Payment Schedule ID of a specific DD. Used to filter direct debits under particular Payment Schedule.
          maxLength: 19
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfListDirectDebitResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits
              data:
                - id: j29p3kpabx
                  uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
                  scheduleId: null
                  endToEndId: "1234567876543234567"
                  paymentAmount: 5000.01
                  requestedCollectionDate: "2015-08-12"
                  actualCollectionDate: "2015-08-12"
                  exportDate: "2015-08-05"
                  remittanceInformation: Remittance Information
                  originalEndToEndId: null
                  representationAttemptNumber: 0
                  paymentStatus: READY_FOR_EXPORT
                  rejectDetails:
                    rejectReason: null
                    rejectDescription: null
                    rejectType: null
                    rejectDate: null
                  links:
                    - resourceType: mandate
                      id: w24y3dya2p
                      uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                    - resourceType: scheme
                      id: abxq9kq52l
                      uri: /schemes/abxq9kq52l
              page:
                pageNumber: 1
                pageSize: 20
                totalElements: 1
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7063"
              returnDescription: paymentstatus is invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7002"
              returnDescription: "'From Date' must be earlier or equal to 'To Date'"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebits_read
        - MerchantApiKey: []
    post:
      tags:
        - Direct Debits
      summary: Create Direct Debit
      description: A POST request used to create direct debits. A request must contain the application/json content type. In the request body you must provide a JSON structure describing the Direct Debit.
      operationId: addSinglePaymentUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: addSinglePaymentRequest
          description: addSinglePaymentRequest
          required: true
          schema:
            $ref: "#/definitions/AddSinglePaymentRequestEntity"
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate that the Direct Debit will be associated to.
          required: true
          type: string
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfAddSinglePaymentResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
              data:
                id: j29p3kpabx
                uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
                scheduleId: null
                endToEndId: "1234567876543234567"
                paymentAmount: 5000.01
                requestedCollectionDate: "2015-08-12"
                actualCollectionDate: "2015-08-12"
                exportDate: "2015-08-05"
                remittanceInformation: Remittance Information
                originalEndToEndId: null
                representationAttemptNumber: 0
                paymentStatus: READY_FOR_EXPORT
                rejectDetails:
                  rejectReason: null
                  rejectDescription: null
                  rejectType: null
                  rejectDate: null
                links:
                  - resourceType: mandate
                    id: w24y3dya2p
                    uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                  - resourceType: scheme
                    id: abxq9kq52l
                    uri: /schemes/abxq9kq52l
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "4004"
              returnDescription: Date format invalid.
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "4005"
              returnDescription: Payment Date is not far enough in the future.
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2: 
          - directdebits
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/directdebits/{directDebitId}:
    get:
      tags:
        - Direct Debits
      summary: Retrieve Direct Debit
      description: A GET request used to retrieve direct debits.
      operationId: viewDirectDebitUsingGET
      produces:
        - application/json
      parameters:
        - name: directDebitId
          in: path
          description: Encoded Direct Debit ID of the Direct Debit to be retrieved.
          required: true
          type: string
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate the Direct Debit is associated to.
          required: true
          type: string
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfViewDirectDebitResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
              data:
                id: j29p3kpabx
                uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
                scheduleId: null
                endToEndId: "1234567876543234567"
                paymentAmount: 5000.01
                requestedCollectionDate: "2015-08-12"
                actualCollectionDate: "2015-08-12"
                exportDate: "2015-08-05"
                remittanceInformation: Remittance Information
                originalEndToEndId: null
                representationAttemptNumber: 0
                paymentStatus: READY_FOR_EXPORT
                rejectDetails:
                  rejectReason: null
                  rejectDescription: null
                  rejectType: null
                  rejectDate: null
                links:
                  - resourceType: mandate
                    id: w24y3dya2p
                    uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                  - resourceType: scheme
                    id: abxq9kq52l
                    uri: /schemes/abxq9kq52l
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebits_read
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/directdebits/{directDebitId}/represent:
    post:
      tags:
        - Direct Debits
      summary: Re-present Failed Direct Debit
      description: A POST request used to re-present direct debits. A request must contain the application/json content type. In the request body you must provide a JSON structure with the required parameters.
      operationId: representDirectDebitUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: directDebitId
          in: path
          description: Encoded Direct Debit ID of the Direct Debit to be retrieved.
          required: true
          type: string
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate the Direct Debit is associated to.
          required: true
          type: string
        - in: body
          name: representFailedDirectDebitRequest
          description: representFailedDirectDebitRequest
          required: true
          schema:
            $ref: "#/definitions/RepresentFailedDirectDebitsRequestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfRepresentFailedDirectDebitResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
              data:
                id: j29p3kpabx
                uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/directdebits/j29p3kpabx
                scheduleId: null
                endToEndId: 103EA22B-D737-4886-B
                paymentAmount: 5000.01
                requestedCollectionDate: "2015-08-04"
                actualCollectionDate: "2015-02-04"
                exportDate: "2015-08-01"
                originalEndToEndId: "1234567890123456789"
                representationAttemptNumber: 1
                paymentStatus: READY_FOR_EXPORT
                rejectDetails:
                  rejectReason: null
                  rejectDescription: null
                  rejectType: null
                  rejectDate: null
                links:
                  - resourceType: mandate
                    id: w24y3dya2p
                    uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
                  - resourceType: scheme
                    id: abxq9kq52l
                    uri: /schemes/abxq9kq52l
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "4025"
              returnDescription: Invalid Representation Date
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "4042"
              returnDescription: Mandate is not in a Valid Status
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantApiKey: []
        - MerchantOAuth2: 
          - directdebits
  /schemes/{schemeId}/mandates/{mandateId}/directdebits/{directDebitId}/revoke:
    post:
      tags:
        - Direct Debits
      summary: Revoke Direct Debit
      description: A POST request used to revoke direct debits. A request must contain the application/json content type. In the request body you must provide a JSON structure describing the revocation reason.
      operationId: revokeDirectDebitUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: directDebitId
          in: path
          description: Encoded Direct Debit ID of the direct debit to be revoked.
          required: true
          type: string
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate the Direct Debit is associated to.
          required: true
          type: string
        - in: body
          name: revokeDirectDebitRequest
          description: revokeDirectDebitRequest
          required: true
          schema:
            $ref: "#/definitions/RevokeDirectDebitRequestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfRevokeDirectDebitResponseEntity"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7064"
              returnDescription: operationReason exceeds maximum length
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "4021"
              returnDescription: Direct Debit cannot be revoked as it is not in a valid status
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebits
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/document:
    get:
      tags:
        - Mandates
      summary: Retrieve Mandate Document
      description: A GET request is used to retrieve a mandate PDF, JPEG or GIF file.
      operationId: getPdfFileUsingGET
      produces:
        - "*/*"
      parameters:
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate to be updated
          required: true
          type: string
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: string
            format: binary
            example: <<<<pdf-content>>>>
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
              - mandates
        - MerchantApiKey: []
    post:
      tags:
        - Mandates
      summary: Upload Mandate Document
      description: |-
        A POST request used to upload a mandate image in PDF, GIF or JPEG format.

        A request must contain the 'multipart/form-data' content type with a json part containing input parameters in a JSON structure, a file part with file content and a file content type.

        Note: If the json part is not provided the file part will be used to derive file name.
      operationId: putPdfFileUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - "*/*"
      parameters:
        - name: Image-Source
          in: header
          description: Image-Source
          required: false
          type: string
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: file
          in: formData
          description: file
          required: true
          type: file
        - name: json
          in: query
          description: json
          required: true
          type: string
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate to be updated
          required: true
          type: string
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfResponseMandateRestEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
              data:
                id: w24y3dya2p
                uri: /schemes/abxq9kq52l/mandates/w24y3dya2p
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              application/json:
              returnCode: "7110"
              returnDescription: "The file name is invalid or exceeds the max length"
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7109"
              returnDescription: "The file size exceeds 2MB"
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/paymentschedules:
    get:
      tags:
        - Payment Schedules
      summary: List Mandate Schedules
      description: A GET request used to retrieve a collection of payment schedules. Lists all payment schedules associated to a mandate.
      operationId: listPaymentSchedulesMandateUsingGET
      produces:
        - application/json
      parameters:
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate to list schedules from.
          required: true
          type: string
        - name: orderby
          in: query
          required: false
          type: string
          description: Order query by, default 'id' in descending order.
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
          default: 1
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20"
          default: 20
        - name: paymentschedulestatus
          in: query
          required: false
          type: array
          enum:
            - ACTIVE
            - INACTIVE
            - CANCELLED
          description: |-
            If the parameters is not provided, all payment schedules are listed. 

            Note: The number of statuses can be queried within a single request by providing multiple occurances of the parameter.
          items:
            type: string
          collectionFormat: multi
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfPaymentScheduleResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq98zk2l/paymentschedules
              data:
                - id: 8b5g5pv82r
                  uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
                  scheduleId: "518052"
                  paymentFrequency: DAILY
                  paymentType: FIXED_LENGTH
                  startDate: "2017-09-05"
                  numberOfPayments: 2
                  paymentAmount: 9.9
                  firstPaymentAmount: 1.1
                  lastPaymentAmount: 9.9
                  remittanceInformation: remittanceInformation
                  paymentDayOfWeek: null
                  paymentWeekOfMonth: null
                  paymentDateInMonth: null
                  paymentCustomFrequency: null
                  twoPaymentsSamePeriod: true
                  paymentScheduleStatus: ACTIVE
                  links:
                    - resourceType: mandate
                      id: j29pj64jbx
                      uri: /schemes/abxq98zk2l/mandates/j29pj64jbx
                    - resourceType: scheme
                      id: abxq98zk2l
                      uri: /schemes/abxq98zk2l
                - id: j29pv8oabx
                  uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q/paymentschedules/j29pv8oabx
                  scheduleId: "518050"
                  paymentFrequency: DAILY
                  paymentType: FIXED_LENGTH
                  startDate: "2017-09-05"
                  numberOfPayments: 2
                  paymentAmount: 9.9
                  firstPaymentAmount: 1.1
                  lastPaymentAmount: 9.9
                  remittanceInformation: remittanceInformation
                  paymentDayOfWeek: null
                  paymentWeekOfMonth: null
                  paymentDateInMonth: null
                  paymentCustomFrequency: null
                  twoPaymentsSamePeriod: true
                  paymentScheduleStatus: ACTIVE
                  links:
                    - resourceType: mandate
                      id: ybo8zd8j2q
                      uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q
                    - resourceType: scheme
                      id: abxq98zk2l
                      uri: /schemes/abxq98zk2l
              page:
                pageNumber: 1
                pageSize: 20
                totalElements: 2
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7118"
              returnDescription: Payment schedule status is invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7051"
              returnDescription: Max page size is exceeded
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebit_schedules_read
        - MerchantApiKey: []
    post:
      tags:
        - Payment Schedules
      summary: Create Schedule
      description: |-
        A POST request used to create payment schedules. A request must contain the application/json content type. In the request body you must provide a JSON structure describing the Payment Schedule.

        NOTE: Creation of payment schedule results in creation of one (OPEN_ENDED) or more (FIXED_LENGTH) direct debits associated to the schedule. Please use List Direct Debits service, filtering by scheduleId to get the list of created direct debits.
      operationId: addPaymentScheduleUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate the payment schedule will be associated to.
          required: true
          type: string
        - in: body
          name: paymentScheduleEntity
          description: paymentScheduleEntity
          required: true
          schema:
            $ref: "#/definitions/PaymentScheduleRequestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfPaymentScheduleResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q/paymentschedules/j29pv8oabx
              data:
                id: j29pv8oabx
                uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q/paymentschedules/j29pv8oabx
                scheduleId: "518050"
                paymentFrequency: DAILY
                paymentType: FIXED_LENGTH
                startDate: "2017-09-05"
                numberOfPayments: 2
                paymentAmount: 9.9
                firstPaymentAmount: 1.1
                lastPaymentAmount: 9.9
                remittanceInformation: remittanceInformation
                paymentDayOfWeek: null
                paymentWeekOfMonth: null
                paymentDateInMonth: null
                paymentCustomFrequency: null
                twoPaymentsSamePeriod: true
                paymentScheduleStatus: ACTIVE
                links:
                  - resourceType: mandate
                    id: ybo8zd8j2q
                    uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q
                  - resourceType: scheme
                    id: abxq98zk2l
                    uri: /schemes/abxq98zk2l
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7043"
              returnDescription: Start date is invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "4005"
              returnDescription: Payment Date is not far enough in the future
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebit_schedules
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/paymentschedules/{paymentScheduleId}/cancel:
    post:
      tags:
        - Payment Schedules
      summary: Cancel Schedule
      description: |-
        A POST request used to cancel payment schedules. A request must contain the application/json content type. In the request body you must provide a JSON structure describing the cancellation reason.

        NOTE: Cancellation of a payment schedule can result in the cancellation of READY_FOR_EXPORT direct debits associated to the schedule. 
        Please use List Direct Debits service, filtering by scheduleId and paymentStatus=CANCELLED to get the list of CANCELLED direct debits under the payment schedule.
      operationId: cancelPaymentScheduleUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: cancelPaymentScheduleEntity
          description: cancelPaymentScheduleEntity
          required: true
          schema:
            $ref: "#/definitions/CancelPaymentScheduleRequestEntity"
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate to associated to the schedule.
          required: true
          type: string
        - name: paymentScheduleId
          in: path
          description: Encoded Payment Schedule Id of the schedule to be viewed.
          required: true
          type: string
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfPaymentScheduleResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
              data:
                id: 8b5g5pv82r
                uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
                scheduleId: "518052"
                paymentFrequency: DAILY
                paymentType: FIXED_LENGTH
                startDate: "2017-09-05"
                numberOfPayments: 2
                paymentAmount: 9.9
                firstPaymentAmount: 1.1
                lastPaymentAmount: 9.9
                remittanceInformation: remittanceInformation
                paymentDayOfWeek: null
                paymentWeekOfMonth: null
                paymentDateInMonth: null
                paymentCustomFrequency: null
                twoPaymentsSamePeriod: true
                paymentScheduleStatus: CANCELLED
                links:
                  - resourceType: mandate
                    id: j29pj64jbx
                    uri: /schemes/abxq98zk2l/mandates/j29pj64jbx
                  - resourceType: scheme
                    id: abxq98zk2l
                    uri: /schemes/abxq98zk2l
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7064"
              returnDescription: Operation Reason exceeds maximum length
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7120"
              returnDescription: Payment Schedule cannot be cancelled as it is not in ACTIVE status
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
       - MerchantApiKey: []
       - MerchantOAuth2:
         - directdebit_schedules
  /schemes/{schemeId}/mandates/{mandateId}/paymentschedules/{scheduleId}:
    get:
      tags:
        - Payment Schedules
      summary: View Schedule
      description: "A GET request used to view payment schedules."
      operationId: viewUsingGET
      produces:
        - application/json
      parameters:
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate to associated to the schedule.
          required: true
          type: string
        - name: scheduleId
          in: path
          description: Encoded Payment Schedule Id of the schedule to be viewed.
          required: true
          type: string
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfPaymentScheduleResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
              data:
                id: 8b5g5pv82r
                uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
                scheduleId: "518052"
                paymentFrequency: DAILY
                paymentType: FIXED_LENGTH
                startDate: "2017-09-05"
                numberOfPayments: 2
                paymentAmount: 9.9
                firstPaymentAmount: 1.1
                lastPaymentAmount: 9.9
                remittanceInformation: remittanceInformation
                paymentDayOfWeek: null
                paymentWeekOfMonth: null
                paymentDateInMonth: null
                paymentCustomFrequency: null
                twoPaymentsSamePeriod: true
                paymentScheduleStatus: CANCELLED
                links:
                  - resourceType: mandate
                    id: j29pj64jbx
                    uri: /schemes/abxq98zk2l/mandates/j29pj64jbx
                  - resourceType: scheme
                    id: abxq98zk2l
                    uri: /schemes/abxq98zk2l
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebit_schedules_read
        - MerchantApiKey: []
  /schemes/{schemeId}/mandates/{mandateId}/revokealldirectdebits:
    post:
      tags:
        - Direct Debits
      summary: Revoke All Direct Debits
      description: A POST request used to revoke all direct debits associated to a mandate. A request must contain the application/json content type. In the request body you must provide a JSON structure with the required parameters.
      operationId: revokeAllDirectDebitsUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - name: mandateId
          in: path
          description: Encoded Mandate ID of the mandate who's direct debit(s) are to be revoked.
          required: true
          type: string
        - in: body
          name: revokeAllDirectDebitsRequest
          description: revokeAllDirectDebitsRequest
          required: true
          schema:
            $ref: "#/definitions/RevokeAllDirectDebitsRequestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate is associated to.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfRevokeAllDirectDebitsResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/revokealldirectdebits
              data:
                uri: /schemes/abxq9kq52l/mandates/w24y3dya2p/revokealldirectdebits
                totalTransactionsRevoked: 1
                totalAmountRevoked: 5000.01
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7064"
              returnDescription: operationReason exceeds maximum length
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "4022"
              returnDescription: No Direct Debit exists matching information provided
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2: 
          - directdebits
        - MerchantApiKey: []
  /schemes/{schemeId}/paymentschedules:
    get:
      tags:
        - Payment Schedules
      summary: List Scheme Schedules
      description: A GET request used to retrieve a collection of payment schedules. Lists all payment schedules associated to a scheme.
      operationId: listPaymentSchedulesSchemeUsingGET
      produces:
        - application/json
      parameters:
        - name: orderby
          in: query
          required: false
          type: string
          description: Order query by, default 'id' in descending order.
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page number to be returned. Default: 1"
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
          description: "Holds page size to be returned. Default: 20"
        - name: paymentschedulestatus
          in: query
          required: false
          type: array
          enum:
            - ACTIVE
            - INACTIVE
            - CANCELLED
          description: |-
            If the parameters is not provided, all payment schedules are listed. 

            Note: The number of statuses can be queried within a single request by providing multiple occurances of the parameter.
          items:
            type: string
          collectionFormat: multi
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme to list schedules from. to list schedules from.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RestPaginatedCollectionResponseEnvelopeOfPaymentScheduleResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq98zk2l/paymentschedules
              data:
                - id: 8b5g5pv82r
                  uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
                  scheduleId: "518052"
                  paymentFrequency: DAILY
                  paymentType: FIXED_LENGTH
                  startDate: "2017-09-05"
                  numberOfPayments: 2
                  paymentAmount: 9.9
                  firstPaymentAmount: 1.1
                  lastPaymentAmount: 9.9
                  remittanceInformation: remittanceInformation
                  paymentDayOfWeek: null
                  paymentWeekOfMonth: null
                  paymentDateInMonth: null
                  paymentCustomFrequency: null
                  twoPaymentsSamePeriod: true
                  paymentScheduleStatus: ACTIVE
                  links:
                    - resourceType: mandate
                      id: j29pj64jbx
                      uri: /schemes/abxq98zk2l/mandates/j29pj64jbx
                    - resourceType: scheme
                      id: abxq98zk2l
                      uri: /schemes/abxq98zk2l
                - id: j29pv8oabx
                  uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q/paymentschedules/j29pv8oabx
                  scheduleId: "518050"
                  paymentFrequency: DAILY
                  paymentType: FIXED_LENGTH
                  startDate: "2017-09-05"
                  numberOfPayments: 2
                  paymentAmount: 9.9
                  firstPaymentAmount: 1.1
                  lastPaymentAmount: 9.9
                  remittanceInformation: remittanceInformation
                  paymentDayOfWeek: null
                  paymentWeekOfMonth: null
                  paymentDateInMonth: null
                  paymentCustomFrequency: null
                  twoPaymentsSamePeriod: true
                  paymentScheduleStatus: ACTIVE
                  links:
                    - resourceType: mandate
                      id: ybo8zd8j2q
                      uri: /schemes/abxq98zk2l/mandates/ybo8zd8j2q
                    - resourceType: scheme
                      id: abxq98zk2l
                      uri: /schemes/abxq98zk2l
              page:
                pageNumber: 1
                pageSize: 20
                totalElements: 2
                totalPages: 1
              sort: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7118"
              returnDescription: Payment schedule status is invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7051"
              returnDescription: Max page size is exceeded
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - directdebit_schedules_read
        - MerchantApiKey: []
    post:
      tags:
        - Payment Schedules
      summary: Create Schedule & Mandate
      description: |-
        A POST request used to create payment schedule and mandate within the same request. A request must contain the application/json content type. In the request body you must provide a JSON structure describing the Payment Schedule and Mandate.

        NOTE: Creation of payment schedule results in creation of one (OPEN_ENDED) or more (FIXED_LENGTH) direct debits associated to the schedule. Please use List Direct Debits service, filtering by scheduleId to get the list of created direct debits.
      operationId: addPaymentScheduleUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: paymentScheduleEntity
          description: paymentScheduleEntity
          required: true
          schema:
            $ref: "#/definitions/PaymentScheduleMOTFRequestEntity"
        - name: schemeId
          in: path
          description: Encoded Scheme ID of the scheme the mandate and schedule should be created against.
          required: true
          type: string
        - name: x-mandate-source
          in: header
          description: x-mandate-source
          required: false
          type: string
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfPaymentScheduleResponseEntity"
          examples:
            application/json:
              uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
              data:
                id: 8b5g5pv82r
                uri: /schemes/abxq98zk2l/mandates/j29pj64jbx/paymentschedules/8b5g5pv82r
                scheduleId: "518052"
                paymentFrequency: DAILY
                paymentType: FIXED_LENGTH
                startDate: "2017-09-05"
                numberOfPayments: 2
                paymentAmount: 9.9
                firstPaymentAmount: 1.1
                lastPaymentAmount: 9.9
                remittanceInformation: remittanceInformation
                paymentDayOfWeek: null
                paymentWeekOfMonth: null
                paymentDateInMonth: null
                paymentCustomFrequency: null
                twoPaymentsSamePeriod: true
                paymentScheduleStatus: ACTIVE
                links:
                  - resourceType: mandate
                    id: j29pj64jbx
                    uri: /schemes/abxq98zk2l/mandates/j29pj64jbx
                  - resourceType: scheme
                    id: abxq98zk2l
                    uri: /schemes/abxq98zk2l
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7043"
              returnDescription: Start date is invalid
              details: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10091"
              returnDescription: Access denied
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "4005"
              returnDescription: Payment Date is not far enough in the future
              details: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - mandates
        - MerchantApiKey: []
  /transfers:
    post:
      tags:
        - Transfers
      summary: Create Transfer
      description: POST request used to transfer funds between a Nuapay users own Nuapay accounts. A request must contain the application/json content type. In the request body you must provide a JSON structure describing the transfer.
      operationId: transferUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: JWS-Signature
          in: header
          description: JWS-Signature
          required: false
          type: string
        - name: Idempotency-Key
          in: header
          x-sentenial:
            enriched: "true"
          description: Every request will be processed only once per Idempotency-Key.  The Idempotency Key will be valid for 24 hours.
          required: false
          type: string
          maxLength: 50
        - in: body
          name: transfersRequest
          description: transfersRequest
          required: true
          schema:
            $ref: "#/definitions/TransfersRequest"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/RestResponseEnvelopeOfTransfersResponse"
          examples:
            application/json:
              uri: /transfers/j29p3kpabx
              data:
                id: j29p3kpabx
                uri: /transfers/j29p3kpabx
                requestedExecutionDate: 2018-10-18
                remittanceInfo: Transfer Example
                amount: 0.01
                currency: EUR
                accountFrom:
                  domesticAccountNumber: 03769154
                  domesticAccountCountry: GB
                  domesticBankCode: null
                  domesticBranchCode: "009999"
                  domesticCheckSum: 35
                  iban: GB35SELN00999903769154
                  bic: SELNGB21
                accountTo:
                  domesticAccountNumber: 23882374
                  domesticAccountCountry: GB
                  domesticBankCode: null
                  domesticBranchCode: "009999"
                  domesticCheckSum: 20
                  iban: GB20SELN00999923882374
                  bic: SELNGB21
                links: []
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                code: "7131"
                field: currency
                description: Field is invalid or max length is exceeded
                resourceUri: null
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "7147"
              returnDescription: Transfer not allowed for Originator type.
              details: null
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "10093"
              returnDescription: Requested resource is not available
              details: null
        405:
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        415:
          description: Unsupported Media Type
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
          examples:
            application/json:
              returnCode: "8888"
              returnDescription: Input validation errors occurred. Please check details.
              details:
                code: "7148"
                field: requestedExecutionDate
                description: The Execution Date must be set to today's date.
                resourceUri: null
        429:
          description: Too Many Requests
          x-sentenial:
            enriched: "true"
          headers:
            X-Rate-Limit-Reset:
              type: integer
              format: int32
              description: Number in seconds to wait before retrying request.
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples:
            application/json:
              returnCode: null
              returnDescription: null
              details: null
      security:
        - MerchantOAuth2:
          - transfers
        - MerchantApiKey: []
securityDefinitions:
  MerchantApiKey:
    type: basic
  MerchantOAuth2:
    type: oauth2
    tokenUrl: https://api.nuapay.com/oauth/token_key
    flow: password
    scopes:
      beneficiaries: Beneficiaries Write Access
      beneficiaries_read: Beneficiaries Read Access
      credittransfers: Credit Transfer Write Access
      credittransfers_read: Credit Transfers Read Access
      directdebits: Direct Debits Write Access
      directdebits_read: Direct Debits Read Access 
      directdebit_schedules: Direct Debit Schedules Write Access
      directdebit_schedules_read: Direct Debits Schedules Read Access
      mandates: Direct Debit Mandates Write Access
      mandates_read: Direct Debit Mandates Read Access
      transfers: Nuapay Transfers Write Access
      accounts: Nuapay and Non-Nuapay Accounts Write Access
      accounts_read: Nuapay and Non-Nuapay Accounts Read Access
      accounts_settlements_read: Nuapay Accounts Settlements Read Access
      account_transaction_view: Nuapay Transactions Read Access
      account_validate: Account Validation Service Access
      schemes_read: Direct Debit Schemes Read Access
      origix_internal: Internal Services Read Access
      incoming_instant_payments: Incoming Instant Credit Transfers Webhooks Access (IPM)
definitions:
  Account:
    type: object
    properties:
      bic:
        type: string
        description: BIC of the financial institution the account is held in.
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
      iban:
        type: string
        description: Account IBAN.
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
      domesticAccountCountry:
        type: string
        minLength: 2
        maxLength: 2
        description: Domestic Account Country.
      domesticAccountNumber:
        type: string
        minLength: 1
        maxLength: 20
        description: Domestic Account Account Number.
      domesticBankCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Account Bank Code.
      domesticBranchCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Account Branch Code.
      domesticCheckSum:
        type: string
        minLength: 1
        maxLength: 2
        description: Domestic Account Check Sum.
  AccountBalanceResponseEntity:
    type: object
    properties:
      amount:
        type: number
        minimum: 0.00
        description: Balance After Transaction. Decimal separator is '.'. Max two decimal places.
      creditDebitIndicator:
        type: string
        enum:
          - DEBIT
          - CREDIT
        description: Account credit / debit indicator
      currency:
        type: string
        description: Balance currency
        enum:
          - EUR
          - GBP
      type:
        type: string
        enum:
          - AVAILABLE_BALANCE
          - BOOKED_BALANCE
        description: Balance type, in transaction object always 'BOOKED_BALANCE'.
      timestamp:
        type: integer
        format: int64
        description: Timestamp of balance after transaction calculation.  
  AccountIdentificationEntity:
    type: object
    properties:
      bic:
        type: string
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
        description: Account BIC
      domesticAccountCountry:
        type: string
        minLength: 2
        maxLength: 2
        description: Domestic Account Country. 2 letter ISO country code
      domesticAccountNumber:
        type: string
        minLength: 1
        maxLength: 20
        description: Domestic Account Number
      domesticBankCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Bank Code
      domesticBranchCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Branch Code
      domesticCheckSum:
        type: string
        minLength: 1
        maxLength: 2
        description: Domestic Check Sum
      iban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: Account IBAN
  AccountHoldingInstitution:
    type: object
    properties: 
      institutionName:
        type: string
      branchName:
        type: string
      address:
        $ref: "#/definitions/AccountHoldingInstitutionAddress"
      telephoneNumber:
        type: string
      faxNumber:
        type: string
      closureDate:
        type: string
        format: date
      redirectedTo:
        type: string
  AccountHoldingInstitutionAddress:
      type: object
      properties: 
        line1:
         type: string
        line2:
          type: string
        line3:
          type: string
        postCode:
          type: string
  AccountSettlement:
    type: object
    properties:
      id:
        type: string
        description: Settlement Resourrce Id.
      uri:
        type: string
        description: Settlement Resource Uri.
      accountHolderName:
        type: string
        description: Name of Account Holder (Organistion  Name)
      iban:
        type: string
        description: IBAN of account the settlement is done for.
        pattern: '[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}'
      settlementIban:
        type: string
        description: Settlement IBAN configured on the account.  When Settlement Amount is positive the money is send out to the Settlement IBAN.
        pattern: '[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}'
      currency:
        type: string
        enum:
          - EUR
          - GBP
        description: The currency the settlement was done in.  At the same time it apply to account currency and Settlement Credit Transfer currency.
      reserveForPayouts:
        type: number
        description: Reserve For Payouts configured on the account and taken into account while settlement amount was calculated.
      settlementDate:
        type: string
        format: date
        description: Settlement Date - date the money is  settling on the account.  The date of funds transfer.
      settlementRunDate:
        type: string
        format: date-time
        description: The date the Settlement has been executed.
      minimumBalance:
        type: number
        description: The minimum balance configured on the account at the time of Settlement execution. The Minimum Balance decrease the Settlement Amount blocking the money to be left of the account.
      openingBalance:
        type: number
        description: Its a previous Settlement  closing balance.
      closingBalance:
        type: number
        description: Its a balance calculated as part of Settlement run reflecting how much money is left on account after the Settlement.
      currentReserve:
        type: number
        description: Its amount of money calculated as part of Settlement run as Reserve for upcoming DD-Rtransactions (Float Amount).
      previousReserve:
        type: number
        description: Its amount of money calculated as part of previous Settlement run as Reserve for upcoming DD-Rtransactions (Float Amount).
      settlementAmount:
        type: number
        description: Its amount of money calcualted to be settled to Settlement IBAN via Settlement Credit Transfer. If Settlement Amount exeeds maximum Credit Transfer amount for the given payment currency and scheme its split to multiple Settlement Credit Transfers. Its calculated as Opening Balance + Account Credits - Account Debits  lowered by Current Reserve, Minimum Balance and Reserve For Payouts. If negative result calculated it would be returned as 0.
      previousSettlementId:
        type: string
        description: It returnes the previous settlement id that was used to calculate `previousReserve` and `openingBalance`,
      floatExposure:
        $ref: "#/definitions/FloatExposure"
      settlementCreditTransfers:
        type: array
        items:
          $ref: "#/definitions/SettlementCreditTransfer"
  AccountValidationRestEntity:
    type: object
    properties:
      accountCountry:
        type: string
        minLength: 2
        maxLength: 2
        description: Domestic Account Country. 2 letter ISO country code
      domesticAccountNumber:
        type: string
        minLength: 1
        maxLength: 20
        description: Domestic Account Number
      domesticBankCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Bank Code
      domesticBranchCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Branch Code
      domesticCheckSum:
        type: string
        minLength: 1
        maxLength: 2
        description: Domestic Check Sum
      iban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: Account IBAN
      bic:
        type: string
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
        description: Account BIC
    example:
      iban: GB35SELN00999903769154
  AddAccountRequest:
    type: object
    required:
      - currency
      - name
    properties:
      currency:
        type: string
        enum:
          - EUR
          - GBP
        description: Account currency
      identification:
        $ref: "#/definitions/AccountIdentificationEntity"
      masterAccountIban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: "Master account to link sub-account to. Must be the same currency as sub-account being created, has to exist under the same Originator and must be of type 'CURRENT_ACCOUNT'."
      name:
        type: string
        pattern: "[0-9a-zA-Z\\ \\,\\.\\+\\(\\)\\/:\\?\\'-]{1,50}"
        description: Account name
      secondaryIdentification:
        type: string
        pattern: "[0-9a-zA-Z\\ \\,\\.\\+\\(\\)\\/:\\?\\'-]{1,35}"
        description: Account secondary identification.
      settlementIban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: Settlement IBAN to be linked to account created as part of this request, should only be used when creating a Nuapay Virtual Account
      type:
        type: string
        enum:
          - CURRENT_ACCOUNT
          - SUB_ACCOUNT
        description: Account type. Can be either, CURRENT_ACCOUNT for general use or SUB_ACCOUNT for specific master/sub account functionality.
      holderName:
        type: string
        description: |-
          The Name of account holder that is sent to Payment Scheme. If not provided defaults to Originator Name.

          Note: This field shall be populated only by PSPs that executes payments on behalf of its customers and wish their customer name to be send out to the Payment Scheme. 
          The value in this field is concatenated with Originator name before sent to Payment Scheme in format <OriginatorName> re <holderName>. 
          Exact name that is sent to the scheme is always returned in response `actualHolderName` field.
    example:
      name: Test Account
      currency: EUR
      type: CURRENT_ACCOUNT
      identification:
        iban: GB35SELN00999903769154
        bic: SELNGB21
      secondaryIdentification: REST ACC
      settlementIban: "IE72TURU99100404712507"
  AddSinglePaymentMOTFRequestEntity:
    type: object
    required:
      - mandate
      - paymentAmount
      - requestedCollectionDate
    properties:
      endToEndId:
        type: string
        pattern: "[0-9a-zA-Z\\,\\.\\+\\(\\)\\/:\\?\\'-]{0,35}"
        description: The payment reference.
      mandate:
        $ref: "#/definitions/RequestMandateRestEntity"
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: The payment amount, max length without decimals is 12 digits. The decimal separator is the punctuation mark (.). A maximum of two decimal places are allowed.
      remittanceInformation:
        type: string
        description: Remmittance information
        maxLength: 140
      structuredRemittanceInformation:
        $ref: "#/definitions/StructuredRemittanceInformationDD"
      requestedCollectionDate:
        type: string
        format: date
        description: Requested Collection Date
      settlementDateShift:
        type: boolean
        description: If true, settlement date shift logic is applied and requestedCollectionDate can be shifted and returned as actualCollectionDate.
    example:
      requestedCollectionDate: "2017-09-03"
      paymentAmount: 5000.01
      endToEndId: 12345678876543234567
      remittanceInformation: Remittance Information
      settlementDateShift: true
      mandate:
        debtor:
          name: Debtor Name
          address:
            line1: Debtor Address Line1
            line2: Debtor Address Line2
            town: Debtor Town
            postCode: 123123
            state: Debtor State
            country: IE
          language: sk
          email: debtor@email.com
          phoneNumber: 0360123123123
          mobileNumber: 0360321312312
        mandateInfo:
          contractReference: Contract Reference
          signatureLocation: Signature Location
          signatureDate: "2015-07-21"
          mandateType: RCUR
          migratingMandate: FALSE
        debtorAccount:
          iban: GB94SELN00999976543215
          bic: SELNGB21
        creditorAccount:
          iban: GB47SELN00999912345678
          bic: SELNGB21
  AddSinglePaymentRequestEntity:
    type: object
    required:
      - paymentAmount
      - requestedCollectionDate
    properties:
      endToEndId:
        type: string
        pattern: "[0-9a-zA-Z\\,\\.\\+\\(\\)\\/:\\?\\'-]{0,35}"
        description: Payment Reference
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: The payment amount, max length without decimals is 12 digits. The decimal separator is the punctuation mark (.). A maximum of two decimal places are allowed.
      remittanceInformation:
        type: string
        description: Remmittance Information
        maxLength: 140
      structuredRemittanceInformation:
        $ref: "#/definitions/StructuredRemittanceInformationDD"
      requestedCollectionDate:
        type: string
        format: date
        description: Requested Collection Date, format yyyy-mm-dd.
      settlementDateShift:
        type: boolean
        description: If true, settlement date shift logic is applied and requestedCollectionDate can be shifted and returned as actualCollectionDate.
    example:
      endToEndId: 1234567876543234567
      paymentAmount: 5000.01
      remittanceInformation: Remmittance Information
      requestedCollectionDate: "2018-03-27"
      settlementDateShift: true
  Address:
    type: object
    properties:
      country:
        type: string
        minLength: 2
        maxLength: 2
        description: Country ISO Code
      line1:
        type: string
        description: Address Line 1
        maxLength: 70
      line2:
        type: string
        description: Address Line 2
        maxLength: 70
      line3:
        type: string
        description: Address Line 3
        maxLength: 70
      postCode:
        type: string
        description: Post Code
        maxLength: 16
      town:
        type: string
        description: Town
        maxLength: 70
  AddressRestEntity:
    type: object
    properties:
      line1:
        type: string
        description: Address Line 1
        maxLength: 70
      line2:
        type: string
        description: Address Line 2
        maxLength: 70
      town:
        type: string
        description: City/Town
        maxLength: 70
      postCode:
        type: string
        description: Post Code
        maxLength: 16
      state:
        type: string
        description: State
        maxLength: 70
      country:
        type: string
        description: Country ISO Code
        minLength: 2
        maxLength: 2
      streetName:
        type: string
        description: Name of a street or thoroughfare. Use the field instead or `line1` to provide name of the street. If both provided value from this field will override `line1` value
        maxLength: 70
      buildingNumber:
        type: string
        description: Number that identifies the position of a building on a street.
  BaseOperationRestEntity:
    type: object
    required:
      - operationReason
    properties:
      operationReason:
        type: string
        minLength: 1
        maxLength: 140
        description: Reason for cancellation
    example:
      operationReason: Reason for cancellation
  BasePostFilterElementRequest:
    type: object
    properties:
      queryString:
        type: string
        minLength: 3
        maxLength: 200
        description: Free text query string that searches in the 'name' and 'identification.iban' fields. Requries 3 characters minimum.
  BasePostPageElementRequest:
    type: object
    properties:
      pageNumber:
        type: integer
        format: int32
        default: 1
        description: Page number to be returned. Default to '1'.
      pageSize:
        type: integer
        format: int32
        default: 20
        description: Number of elements to be returned on single page. Default to '20' elements.
  CancelPaymentScheduleRequestEntity:
    type: object
    properties:
      operationReason:
        type: string
        maxLength: 255
        description: Reason for cancellation
    example:
      operationReason: Reason for cancellation
  CounterParty:
    type: object
    properties:
      account:
        $ref: "#/definitions/Account"
      address:
        $ref: "#/definitions/Address"
      name:
        type: string
  CreditorAccountRestEntity:
    type: object
    properties:
      bic:
        type: string
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
        description: Creditor Account BIC.
      iban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: Creditor Account IBAN.
  CreditorSchemeResponse:
    type: object
    properties:
      creditorSchemeId:
        type: string
        description: Creditor Scheme ID
      schemeType:
        type: string
        description: Scheme Type
        enum:
          - CORE
          - B2B
          - BACS
  DebtorAccountRestEntity:
    type: object
    properties:
      accountCountry:
        type: string
        minLength: 2
        maxLength: 2
        description: Debtor Account Domestic Account Country. 2 letter ISO country code
      bic:
        type: string
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
        description: Debtor Account BIC
      domesticAccountNumber:
        type: string
        maxLength: 70
        description: Debtor Account Number
      domesticBankCode:
        type: string
        maxLength: 35
        description: Debtor Account Domestic Bank Code
      domesticBranchCode:
        type: string
        maxLength: 35
        description: Debtor Account Domestic Branch Code
      domesticCheckSum:
        type: string
        maxLength: 35
        description: Debtor Account Domestic Check Sum
      iban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: Debtor Account IBAN
  DebtorRestEntity:
    type: object
    required:
      - name
    properties:
      address:
        $ref: "#/definitions/AddressRestEntity"
      email:
        type: string
        maxLength: 254
        pattern: .*@.*
        description: Debtor Email Address
      language:
        type: string
        description: Communication language
        enum:
          - en
          - pt
          - nl
          - fr
          - it
          - es
          - de
          - sk
          - fr_BE
          - nl_BE
      mobileNumber:
        type: string
        maxLength: 30
        description: Debtor Mobile Phone Number
      name:
        type: string
        minLength: 1
        maxLength: 70
        description: Debtor Name
      phoneNumber:
        type: string
        maxLength: 30
        description: Debtor Phone Number
  DirectDebitInfoResponse:
    type: object
    properties:
      actualCollectionDate:
        type: string
        format: date
        description: Requested Settlement Date
      endToEndId:
        type: string
        maxLength: 35
        description: Payment Reference
      exportDate:
        type: string
        format: date
        description: Export Date
      originalEndToEndId:
        type: string
        description: "Return parameter only, non-null only if direct debit is a re-presentation of a different direct debit"
        maxLength: 35
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Payment Amount. Max length without decimals is 12 digits. Decimal separator is '.'. Max two decimal places allowed.
      paymentStatus:
        type: string
        enum:
          - READY_FOR_EXPORT
          - EXPORTING
          - REVOKED
          - EXPORTED
          - ACCEPTED
          - REVERSED
          - REFUSED
          - REJECTED
          - RETURNED
          - REFUNDED
          - CANCELLED
          - PENDING
          - PENDING_SETTLEMENT
          - REPRESENTED
      remittanceInfo:
        type: string
        description: Remmittance Information
        maxLength: 140
      representationAttemptNumber:
        type: integer
        format: int32
        description: Return parameter only
      requestedCollectionDate:
        type: string
        format: date
        description: Requested Settlement Date
      scheduleId:
        type: string
        maxLength: 19
        description: Payment Schedule Id
  ElectronicSignatureDetails:
    type: object
    properties:
      authorizationEmail:
        type: string
        maxLength: 254
        pattern: .*@.*
        description: Authentication Email Address
      authorizationMethod:
        type: string
        description: Authorization method used to sign the mandate
        enum:
          - CHECK_BOX
          - SMS_PASSWORD
          - EMAIL_PASSWORD
      authorizationMobileNumber:
        type: string
        maxLength: 30
        description: Authentication Phone Number
      authorizationToken:
        type: string
        maxLength: 35
        description: Authentication Token (OTP)
      geographicLocation:
        type: string
        maxLength: 70
        description: Authentication Geographic Location
      ipAddress:
        type: string
        maxLength: 39
        description: Authentication IP Address
  EmandateAuthenticationDetails:
    type: object
    properties:
      authenticationMethod:
        type: string
        description: Authentication method used to confirm Debtor's identity
        enum:
          - NONE
          - AISP
      authenticationReference:
        type: string
        maxLength: 35
        description: Authentication Token retrieved from Creditor's bank when using AISP authentication method
  ErrorDetail:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
      field:
        type: string
      resourceUri:
        type: string
  ErrorResponse:
    type: object
    properties:
      details:
        type: array
        items:
          $ref: "#/definitions/ErrorDetail"
      returnCode:
        type: string
      returnDescription:
        type: string
  FloatExposure:
    type: object
    properties:
      numberOfTransactions:
        type: integer
        format: int32
        description: Number of Direct Debits taken into account for Float Amount calculation
      valueOfTransactions:
        type: number
        description: Total amount of Direct Debits taken into account for Float Amount calculation.
      floatRate:
        type: integer
        format: int32
        description: Float Percentage is a variable taken into account  when calculating Float Amount. Its a value between 0% and 99%.
      maxExposurePreFloat:
        type: number
        description: The Exposure amount is a variable taken into account  when calculating Float Amount.  This setting holds threshold for Exposure. If Exposure is lower than the threshold -  Float Amount is set to 0 regardless of the calculation result.
  ListAccountRequestEntity:
    type: object
    properties:
      filter:
        $ref: "#/definitions/BasePostFilterElementRequest"
      page:
        $ref: "#/definitions/BasePostPageElementRequest"
    example:
      filter:
        queryString: SELN
      page:
        pageNumber: 1
        pageSize: 10
  ListNuapayAccountTransactionsRequest:
    type: object
    properties:
      filter:
        $ref: "#/definitions/NuapayTransactionFilter"
      page:
        $ref: "#/definitions/PageFilterEntity"
    example:
     filter:
       valueDateFrom: '2025-02-13'
       valueDateTo: '2025-03-14'
       amountFrom: 10
       amountTo: 124
       remittanceInfo: remittance
       endToEndId: End to end id
       counterpartyName: name
       counterpartyIban: FR7612346543217416767799004
       creditDebitIndicator: CREDIT
       type: CREDIT_TRANSFERS
     page:
       pageNumber: 1
       pageSize: 20
  ListAccountSettlementsResponse:
    type: object
    properties:
      uri:
        type: string
        description: resource Uri
      data:
        type: array
        items:
          $ref: "#/definitions/AccountSettlement"
      page:
        $ref: "#/definitions/RestResponsePaginationDetails"
      sort:
        type: array
        items:
          type: string
  ListAccountTransactionsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RestResponseEnvelopeInnerOfAccountTransactionEntity"
      page:
        $ref: "#/definitions/RestResponsePaginationDetails"
      sort:
        type: array
        items:
          type: string
      uri:
        type: string
        description: resource Uri
  MandateInfoResponse:
    type: object
    properties:
      domesticMandateId:
        type: string
      mandateId:
        type: string
  MandateInfoRestEntity:
    type: object
    properties:
      contractReference:
        type: string
        maxLength: 35
        description: Contract reference
      electronicSignatureDetails:
        $ref: "#/definitions/ElectronicSignatureDetails"
      emandateAuthenticationDetails:
        $ref: "#/definitions/EmandateAuthenticationDetails"
      mandateId:
        type: string
        maxLength: 35
        description: Mandate ID
      mandateType:
        type: string
        maxLength: 4
        description: Mandate type
        enum:
          - RCUR
          - OOFF
      migratingMandate:
        type: boolean
        description: Migrating mandate indicator, when TRUE mandate will be treated as a migrating mandate.
      resendMandateForSignature:
        type: string
        maxLength: 11
        description: "DEFAULT: Only alter the Mandate Status from ACTIVE to PENDING if a Key Field is altered in the Request.\n\n SEND: Always alter Mandate status from ACTIVE back to PENDING regardless of the update.\n\n DO_NOT_SEND: Never alter the Mandate status from ACTIVE to PENDING, regardless of the update"
        enum:
          - DEFAULT
          - SEND
          - DO_NOT_SEND
      signatureDate:
        type: string
        format: date
        description: Signature Date
      signatureLocation:
        type: string
        maxLength: 70
        description: Signature Location
    example:
      signatureDate: "2015-07-21"
      signatureLocation: Signature Location
      electronicSignatureDetails:
        authorizationMethod: SMS_PASSWORD
        authorizationToken: "1234"
        authorizationEmail: debtor@email.com
        authorizationMobileNumber: "0360321312312"
        ipAddress: 192.168.8.1
        geographicLocation: Geo Location
      emandateAuthenticationDetails:
        authentication: AISP
        authenticationReference: "2c8f2c6e9002"
  RetrieveAccountSettlementResponse:
    type: object
    properties:
      uri:
        type: string
        description: resource Uri
      data:
        $ref: "#/definitions/AccountSettlement"
  OriginatorAccount:
    type: object
    properties:
      domesticAccountCountry:
        type: string
        minLength: 2
        maxLength: 2
        description: Domestic Account Country. Use with domestic account number.
      domesticAccountNumber:
        type: string
        minLength: 1
        maxLength: 20
        description: Domestic Account Number. User either IBAN or domestic account number.
      domesticBankCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Account Bank Code. Use with domestic account number.
      domesticBranchCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Account Branch Code. Use with domestic account number.
      domesticCheckSum:
        type: string
        minLength: 1
        maxLength: 2
        description: Domestic Account Check Sum. Use with domestic account number.
      iban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: IBAN. User either IBAN or domestic account number.
  OriginatorAccountResponse:
    type: object
    properties:
      bic:
        type: string
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
        description: BIC
      domesticAccountCountry:
        type: string
        minLength: 2
        maxLength: 2
        description: Domestic Account Country.
      domesticAccountNumber:
        type: string
        minLength: 1
        maxLength: 20
        description: Domestic Account Account Number.
      domesticBankCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Account Bank Code.
      domesticBranchCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Account Branch Code.
      domesticCheckSum:
        type: string
        minLength: 1
        maxLength: 2
        description: Domestic Account Check Sum.
      iban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: IBAN
  OtherEntity:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        minLength: 1
        maxLength: 35
        description: Private ID Other ID
      issuer:
        type: string
        minLength: 1
        maxLength: 35
        description: Private ID Other Issuer
      schemeName:
        $ref: "#/definitions/SchemeNameEntity"
  PageFilterEntity:
    type: object
    properties:
      pageNumber:
        type: integer
        format: int32
        default: 1
        description: Page number to be returned. Default to '1'.
      pageSize:
        type: integer
        format: int32
        default: 20
        description: Number of elements to be returned on single page. Default to '20' elements.
  PaymentScheduleMOTFRequestEntity:
    type: object
    required:
      - mandate
      - paymentAmount
      - paymentFrequency
      - paymentType
      - startDate
    properties:
      firstPaymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of first payment to be sent, max length without decimals is 12 digits. The decimal separator is the punctuation mark (.). A maximum of two decimal places are allowed.
      lastPaymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of last payment to be sent, max length without decimals is 12 digits. The decimal separator is the punctuation mark (.). A maximum of two decimal places are allowed.
      mandate:
        $ref: "#/definitions/RequestMandateRestEntity"
      numberOfPayments:
        type: integer
        format: int32
        maxLength: 3
        description: Required for FIXED_LENGTH schedules. Not allowed for OPEN_ENDED schedules.
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of regular payments to be sent, max length without decimals is 12 digits. The decimal separator is the punctuation mark (.). A maximum of two decimal places are allowed.
      paymentCustomFrequency:
        type: number
        enum:
          - 3
          - 6
        description: Determines if a payment schedule is quarterly (payment every 3 months) or bi-annually (payment every 6 months). Must be present for CUSTOM paymentFrequency, otherwise should not be used.
      paymentDateInMonth:
        type: integer
        format: int32
        minimum: 1
        maximum: 31
        description: Day in month to make payments, between 1 and 31.
      paymentDayOfWeek:
        type: string
        enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
        description: Day of the week to make payments.
      paymentFrequency:
        type: string
        enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - MONTHLY
          - YEARLY
          - CUSTOM
        description: Determines the frequency of the payment schedule. If CUSTOM is selected paymentCustomFrequency must also be provided.
      paymentType:
        type: string
        enum:
          - FIXED_LENGTH
          - OPEN_ENDED
        description: Determines if a payment schedule is fixed length or open ended. If FIXED_LENGTH is selected numberOfPayments must also be provided.
      paymentWeekOfMonth:
        type: string
        enum:
          - FIRST
          - SECOND
          - THIRD
          - FOURTH
          - LAST
        description: Week in month when to make the payment.
      remittanceInformation:
        type: string
        maxLength: 140
        description: Remittance information that will be sent with every payment generated as part of the schedule.
      scheduleId:
        type: string
        maxLength: 19
        description: This is the customer payment schedule reference that is further used to identify the schedule when filtering direct debits.
      startDate:
        type: string
        format: date
        description: Actual Collection Date (ACD) of first payment for the schedule, format yyyy-mm-dd.
      twoPaymentsSamePeriod:
        type: boolean
        description: Boolean that determines if two direct debits should be generated in case the subsequent payment date (paymentDayOfWeek, paymentWeekOfMonth, paymentDateInMonth) is later than the startDate.
    example:
      paymentFrequency: DAILY
      paymentType: FIXED_LENGTH
      startDate: "2017-09-01"
      numberOfPayments: 2
      paymentAmount: 9.9
      firstPaymentAmount: 1.1
      lastPaymentAmount: 9.9
      remittanceInformation: remittanceInformation
      twoPaymentsSamePeriod: true
      settlementDateShift: true
      mandate:
        debtor:
          name: Debtor Name
          address:
            line1: Debtor Address Line1
            line2: Debtor Address Line2
            town: " Debtor Town"
            postCode: "123123"
            state: Debtor State
            country: IE
          language: sk
          email: debtor@email.com
          phoneNumber: "0360123123123"
          mobileNumber: "0360321312312"
        mandateInfo:
          contractReference: Contract Reference
          signatureLocation: Signature Location
          signatureDate: "2015-07-21"
          mandateType: RCUR
          migratingMandate: FALSE
        debtorAccount:
          iban: GB94SELN00999976543215
          bic: SELNGB21
        creditorAccount:
          iban: GB47SELN00999912345678
          bic: SELNGB21
  PaymentScheduleRequestEntity:
    type: object
    required:
      - paymentAmount
      - paymentFrequency
      - paymentType
      - startDate
    properties:
      firstPaymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of first payment to be sent, max length without decimals is 12 digits. The decimal separator is the punctuation mark (.). A maximum of two decimal places are allowed.
      lastPaymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of last payment to be sent, max length without decimals is 12 digits. The decimal separator is the punctuation mark (.). A maximum of two decimal places are allowed.
      numberOfPayments:
        type: integer
        format: int32
        maxLength: 3
        description: Required for FIXED_LENGTH schedules. Not allowed for OPEN_ENDED schedules.
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of regular payments to be sent, max length without decimals is 12 digits. The decimal separator is the punctuation mark (.). A maximum of two decimal places are allowed.
      paymentCustomFrequency:
        type: string
        enum:
          - 3
          - 6
        description: Determines if a payment schedule is quarterly (payment every 3 months) or bi-annually (payment every 6 months). Must be present for CUSTOM paymentFrequency, otherwise should not be used.
      paymentDateInMonth:
        type: integer
        format: int32
        minimum: 1
        maximum: 31
        description: Day in month to make payments, between 1 and 31.
      paymentDayOfWeek:
        type: string
        enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
        description: Day of the week to make payments.
      paymentFrequency:
        type: string
        enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - MONTHLY
          - YEARLY
          - CUSTOM
        description: Determines the frequency of the payment schedule. If CUSTOM is selected paymentCustomFrequency must also be provided.
      paymentType:
        type: string
        enum:
          - FIXED_LENGTH
          - OPEN_ENDED
        description: Determines if a payment schedule is fixed length or open ended. If FIXED_LENGTH is selected numberOfPayments must also be provided.
      paymentWeekOfMonth:
        type: string
        enum:
          - FIRST
          - SECOND
          - THIRD
          - FOURTH
          - LAST
        description: Week in month when to make the payment.
      remittanceInformation:
        type: string
        maxLength: 140
        description: Remittance information that will be sent with every payment generated as part of the schedule.
      scheduleId:
        type: string
        maxLength: 19
        description: This is the customer payment schedule reference that is further used to identify the schedule when filtering direct debits.
      settlementDateShift:
        type: boolean
        description: If true, settlement date shift logic is applied and startDate can be shifted and returned as actualCollectionDate of first direct debit.
      startDate:
        type: string
        format: date
        description: Actual Collection Date (ACD) of first payment for the schedule, format yyyy-mm-dd.
      twoPaymentsSamePeriod:
        type: boolean
        description: Boolean that determines if two direct debits should be generated in case the subsequent payment date (paymentDayOfWeek, paymentWeekOfMonth, paymentDateInMonth) is later than the startDate.
    example:
      paymentFrequency: DAILY
      paymentType: FIXED_LENGTH
      startDate: "2017-09-03"
      numberOfPayments: 2
      paymentAmount: 9.9
      firstPaymentAmount: 1.1
      lastPaymentAmount: 9.9
      remittanceInformation: remittanceInformation
      twoPaymentsSamePeriod: true
      settlementDateShift: true
  RejectDetailsResponse:
    type: object
    properties:
      rejectDate:
        type: string
        format: date
        description: The date direct debit was rejected
      rejectDescription:
        type: string
        maxLength: 140
        description: Reject Description
      rejectReason:
        type: string
        description: Reason code
      rejectType:
        type: string
        enum:
          - Cancellation
          - Reject
          - Reversal
          - Return
          - Refusal
          - Authorised Refund
          - Unauthorised Refund
          - Reject Reversal
          - Reject Cancel
          - Revoke
          - Return Reject
          - Refund Reject
          - Import_Reject
  RejectDetailsMandateResponse:
    type: object
    properties:
      rejectDate:
        type: string
        format: date
        description: The date Mandate/DDI was cancelled
      rejectDescription:
        type: string
        maxLength: 140
        description: Reject Description
      rejectReason:
        type: string
        description: Reason code
      rejectType:
        type: string
        enum:
          - CANCELLATION
          - REJECT
  RepresentFailedDirectDebitsRequestEntity:
    type: object
    properties:
      endToEndId:
        type: string
        maxLength: 35
        description: Payment Reference. Must be a unique value and different to the Payment Reference supplied for the failed direct debit being re-presented
      representationDate:
        type: string
        format: date
        description: Re-presentation Date
      representationFee:
        type: number
        description: Re-presentation Fee
    example:
      endToEndId: 103EA22B-D737-4886-B
  RequestMandateRestEntity:
    type: object
    required:
      - debtor
      - debtorAccount
    properties:
      creditorAccount:
        $ref: "#/definitions/CreditorAccountRestEntity"
      debtor:
        $ref: "#/definitions/DebtorRestEntity"
      debtorAccount:
        $ref: "#/definitions/DebtorAccountRestEntity"
      mandateInfo:
        $ref: "#/definitions/MandateInfoRestEntity"
    example:
      debtor:
        name: Debtor Name
        address:
          line1: Debtor Address Line1
          line2: Debtor Address Line2
          town: " Debtor Town"
          postCode: "123123"
          state: Debtor State
          country: IE
        language: fr_BE
        email: debtor@email.com
        phoneNumber: "0360123123123"
        mobileNumber: "0360321312312"
      mandateInfo:
        mandateId: "1234567899"
        contractReference: Contract Reference
        signatureLocation: Signature Location
        signatureDate: "2015-07-21"
        migratingMandate: FALSE
      debtorAccount:
        iban: GB94SELN00999976543215
        bic: SELNGB21
      creditorAccount:
        iban: GB47SELN00999912345678
        bic: SELNGB21
  ResponseMandateInfoRestEntity:
    type: object
    properties:
      contractReference:
        type: string
        maxLength: 35
      creationDate:
        type: string
        format: date
      electronicSignatureDetails:
        $ref: "#/definitions/ElectronicSignatureDetails"
      emandateAuthenticationDetails:
        $ref: "#/definitions/EmandateAuthenticationDetails"
      mandateId:
        type: string
        maxLength: 35
      mandateType:
        type: string
        minLength: 0
        maxLength: 4
      migratingMandate:
        type: boolean
        description: Migrating mandate indicator, when TRUE mandate is a migrating mandate.
      resendMandateForSignature:
        type: string
        minLength: 0
        maxLength: 11
      signatureDate:
        type: string
        format: date
      signatureLocation:
        type: string
        maxLength: 70
      status:
        type: string
  RestCollectionResponseEnvelopeOfCreditorSchemeResponseEntity:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RestResponseEnvelopeInnerOfCreditorSchemeResponseEntity"
      uri:
        type: string
        description: resource Uri
  RestCollectionResponseEnvelopeOfFailedDirectDebitResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RestResponseEnvelopeInnerOfFailedDirectDebitResponse"
      uri:
        type: string
        description: resource Uri
  RestCollectionResponseEnvelopeOfListAccountBalanceResponseEntity:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RestResponseEnvelopeInnerOfListAccountBalanceResponseEntity"
      uri:
        type: string
        description: resource Uri
  RestPaginatedCollectionResponseEnvelopeOfAccountResponseEntity:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RestResponseEnvelopeInnerOfAccountResponseEntity"
      page:
        $ref: "#/definitions/RestResponsePaginationDetails"
      sort:
        type: array
        items:
          type: string
      uri:
        type: string
        description: resource Uri
  RestPaginatedCollectionResponseEnvelopeOfListDirectDebitResponseEntity:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RestResponseEnvelopeInnerOfListDirectDebitResponseEntity"
      page:
        $ref: "#/definitions/RestResponsePaginationDetails"
      sort:
        type: array
        items:
          type: string
      uri:
        type: string
        description: resource Uri
  RestPaginatedCollectionResponseEnvelopeOfListMandateRestResponseItem:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RestResponseEnvelopeInnerOfListMandateRestResponseItem"
      page:
        $ref: "#/definitions/RestResponsePaginationDetails"
      sort:
        type: array
        items:
          type: string
      uri:
        type: string
        description: resource Uri
  RestPaginatedCollectionResponseEnvelopeOfPaymentScheduleResponseEntity:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RestResponseEnvelopeInnerOfPaymentScheduleResponseEntity"
      page:
        $ref: "#/definitions/RestResponsePaginationDetails"
      sort:
        type: array
        items:
          type: string
      uri:
        type: string
        description: resource Uri
  RestResponseEnvelopeInnerOfAccountResponseEntity:
    type: object
    properties:
      actualHolderName:
        type: string
        description: The actual name that is sent to Payment Scheme as Debtor/Creditor name.
      currency:
        type: string
        enum:
          - EUR
          - GBP
        description: Account currency
      id:
        type: string
        description: Resource Id
      identification:
        $ref: "#/definitions/AccountIdentificationEntity"
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      name:
        type: string
        pattern: "[0-9a-zA-Z\\ \\,\\.\\+\\(\\)\\/:\\?\\'-]{1,50}"
        description: Account Name
      secondaryIdentification:
        type: string
        pattern: "[0-9a-zA-Z\\ \\,\\.\\+\\(\\)\\/:\\?\\'-]{1,35}"
        description: Account secondary identification
      type:
        type: string
        enum:
          - CURRENT_ACCOUNT
          - SUB_ACCOUNT
        description: Account type. Can be either, CURRENT_ACCOUNT for general use or SUB_ACCOUNT for specific master/sub account functionality.
      status:
        type: string
        enum:
          - ACTIVE
          - CLOSED
          - SUSPENDED
          - PENDING
          - ERROR
        description: Account status. Only ACTIVE accounts are available for payment processing.
      externalId:
        type: string
        description: External resource ID
      uri:
        type: string
        description: resource Uri
  RestResponseEnvelopeInnerOfAccountTransactionEntity:
    type: object
    properties:
      amount:
        type: number
        description: Transaction Amount. Max length without decimals is 12 digits. Decimal separator is '.'. Max two decimal places.
      balanceAfterTransaction:
        $ref: "#/definitions/AccountBalanceResponseEntity"
      batchReference:
        type: string
        description: Batch reference the transaction was exported in.
        maxLength: 35
      bulkMessageId:
        type: string
        description: Bulk reference the transaction was exported in.
        maxLength: 35
      counterparty:
        $ref: "#/definitions/CounterParty"
      creditDebitIndicator:
        type: string
        enum:
          - CREDIT
          - DEBIT
        description: Transaction Credit / Debit indicator.
      currency:
        type: string
        enum:
          - EUR
          - GBP
        description: Transaction currency
      endToEndId:
        type: string
        maxLength: 35
        description: Transaction end to end reference.
      instructionId:
        type: string
        maxLength: 70
      transactionId:
        type: string
        maxLength: 70
      additionalReference:
        type: string
        description: The field holds any additional reference is received from the scheme. For `UK Faster Payments' holds the Network ID.
        maxLength: 70
      id:
        type: string
        description: Resource Id
      creationDateTime:
        type: string
        format: date-time
        description: Creation Date time of the transction. 
      creationTimestamp: 
        type: integer
        format: int64
        description: Epoch timestamp of the creation date time of transaction.  Same as Account Entry webhook  eventTimestamp. 
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      mandateReference:
        type: string
        description: Mandate reference
      numberOfTransactions:
        type: integer
        format: int32
        description: Number of Transactions in the batch. Used only for Batch Postings
      originalAccountId:
        type: string
        description: This is encodedId of the Sub-Account. The element is returned only for the transactions that happen on Master Account (Current Account) as result of same transaction on Sub-Account.
      originalAccounName:
        type: string
        description: This is Sub-Account name as assigned by customer. Its the name of account with id returned in `originalAccountId`. This field is populated only for Master Account transactions and provide information and indicates that this transaction came originally to Sub-Account.
      originalTransactionId:
        type: string
        description: This is the encodedId of Sub-Account transaction that triggered this Master Account transaction. Only returned for Master Account transactions created on back of Sub-Account received Incoming Credit Transfers.
      postingDate:
        type: string
        format: date
        description: Date when booking happened on the account
      purposeCode:
        type: string
        maxLength: 5
        description: Purpose code
      reasonCode:
        type: string
        maxLength: 4
        description: Reason code
      reasonProprietary:
        type: string
        description: Reason proprietary
      remittanceInfo:
        type: string
        description: Remittance info
      schemeType:
        type: string
        enum:
          - CORE
          - B2B
          - BACS
        description: Returned only for Direct Debits.
      totalAmount:
        type: number
        description: Total amount of transactions in the Batch. Used only for Batch Postings
      transactionType:
        type: string
        maxLength: 64
        description: Returns one of Transaction Types
      ultimateCreditorId:
        type: string
        description: Ultimate Creditor ID.
      ultimateCreditorName:
        type: string
        description: Ultimate Creditor name.
      ultimateDebtorId:
        type: string
        description: Ultimate Debtor ID.
      ultimateDebtorName:
        type: string
        description: Ultimate Debtor name
      unstructuredRemittanceInformation:
        type: string
        description: Related Transaction remittance information
      structuredRemittanceInformation:
        $ref: "#/definitions/StructuredRemittanceInformation"
      uri:
        type: string
        description: resource Uri
      valueDate:
        type: string
        format: date
        description: Transaction value date.
  RestResponseEnvelopeInnerOfAccountValidationResponseRestEntity:
    type: object
    properties:
      domesticAccountCountry:
        type: string
        minLength: 2
        maxLength: 2
        description: Domestic Account Country. 2 letter ISO country code
      bic:
        type: string
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
        description: Account BIC
      domesticAccountNumber:
        type: string
        minLength: 1
        maxLength: 20
        description: Domestic Account Number
      domesticBankCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Bank Code
      domesticBranchCode:
        type: string
        minLength: 1
        maxLength: 10
        description: Domestic Branch Code
      domesticCheckSum:
        type: string
        minLength: 1
        maxLength: 2
        description: Domestic Check Sum
      iban:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: Account IBAN
      holdingBank:
        $ref: "#/definitions/AccountHoldingInstitution"
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      uri:
        type: string
        description: Resource URI
  RestResponseEnvelopeInnerOfAddSinglePaymentResponseEntity:
    type: object
    properties:
      actualCollectionDate:
        type: string
        format: date
        description: Actual Settlement Date
      endToEndId:
        type: string
        maxLength: 35
        description: Payment Reference
      exportDate:
        type: string
        format: date
        description: Export Date
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      operationReason:
        type: string
        description: Operation Reason.
      originalEndToEndId:
        type: string
        maxLength: 35
        description: Returns a non-null value only if direct debit is a re-presentation of a different direct debit.
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
      paymentStatus:
        type: string
        enum:
          - READY_FOR_EXPORT
          - EXPORTING
          - REVOKED
          - EXPORTED
          - ACCEPTED
          - REVERSED
          - REFUSED
          - REJECTED
          - RETURNED
          - REFUNDED
          - CANCELLED
          - PENDING
          - PENDING_SETTLEMENT
          - REPRESENTED
      rejectDetails:
        $ref: "#/definitions/RejectDetailsResponse"
      remittanceInformation:
        type: string
        description: Remmittance Information
        maxLength: 140
      structuredRemittanceInformation:
        $ref: "#/definitions/StructuredRemittanceInformationDD"
      representationAttemptNumber:
        type: integer
        format: int32
        description: Representation Attempt Number
      requestedCollectionDate:
        type: string
        format: date
        description: Requested collection date
      scheduleId:
        type: string
        maxLength: 19
        description: Payment Schedule Id
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeInnerOfCreditorSchemeResponseEntity:
    type: object
    properties:
      creditorSchemeId:
        type: string
        description: Creditor Scheme ID
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      schemeType:
        type: string
        description: Scheme type
        enum:
          - CORE
          - B2B
          - BACS
      creditorSchemeName:
        type: string
        description: Creditor Scheme Name
      uri:
        type: string
        description: resource Uri
  RestResponseEnvelopeInnerOfFailedDirectDebitResponse:
    type: object
    properties:
      creditorScheme:
        $ref: "#/definitions/CreditorSchemeResponse"
      directDebitInfo:
        $ref: "#/definitions/DirectDebitInfoResponse"
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      mandateInfo:
        $ref: "#/definitions/MandateInfoResponse"
      rejectDetails:
        $ref: "#/definitions/RejectDetailsResponse"
      uri:
        type: string
        description: resource Uri
  RestResponseEnvelopeInnerOfListAccountBalanceResponseEntity:
    type: object
    properties:
      balance:
        $ref: "#/definitions/AccountBalanceResponseEntity"
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      timestamp:
        type: integer
        format: int64
        description: "The date the balance was queried for. Note: This is not the request date and may be past or future date"
      uri:
        type: string
        description: resource Uri
  RestResponseEnvelopeInnerOfListDirectDebitResponseEntity:
    type: object
    properties:
      actualCollectionDate:
        type: string
        format: date
        description: Requested Settlement Date
      endToEndId:
        type: string
        maxLength: 35
        description: Payment Reference
      exportDate:
        type: string
        format: date
        description: Export Date
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      originalEndToEndId:
        type: string
        description: Returns a non-null value only if direct debit is a re-presentation of a different direct debit.
        maxLength: 35
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Payment Amount. Max length without decimals is 12 digits. Decimal separator is '.'. Max two decimal places allowed.
      paymentStatus:
        type: string
        enum:
          - READY_FOR_EXPORT
          - EXPORTING
          - REVOKED
          - EXPORTED
          - ACCEPTED
          - REVERSED
          - REFUSED
          - REJECTED
          - RETURNED
          - REFUNDED
          - CANCELLED
          - PENDING
          - PENDING_SETTLEMENT
          - REPRESENTED
      rejectDetails:
        $ref: "#/definitions/RejectDetailsResponse"
      remittanceInformation:
        type: string
        description: Remmittance Information
        maxLength: 140
      structuredRemittanceInformation:
        $ref: "#/definitions/StructuredRemittanceInformationDD"
      representationAttemptNumber:
        type: integer
        format: int32
        description: Return parameter only
      requestedCollectionDate:
        type: string
        format: date
        description: Requested Settlement Date
      scheduleId:
        type: string
        maxLength: 19
        description: Payment Schedule Id
      uri:
        type: string
        description: Resource URI
  RestResponseEnvelopeInnerOfListMandateRestResponseItem:
    type: object
    properties:
      creationDate:
        type: string
        format: date
        description: Mandate creation date, format yyyy-mm-dd
      debtorIBAN:
        type: string
        pattern: "[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
        description: Debtor IBAN
      debtorMobileNumber:
        type: string
        maxLength: 30
        description: Debtor Mobile Number
      debtorName:
        type: string
        maxLength: 70
        description: Debtor Name
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      mandateId:
        type: string
        maxLength: 35
        description: Mandate Reference (UMR)
      mandateStatus:
        type: string
        description: Mandate status
        enum:
          - ACTIVE
          - CANCELLED
          - COMPLETE
          - PENDING
          - UNREADABLE
          - UNSIGNED
          - SCREENING
          - SUSPENDED
          - READY_FOR_EXPORT
          - EXPORTED
      uri:
        type: string
        description: resource Uri
  RestResponseEnvelopeInnerOfPaymentScheduleResponseEntity:
    type: object
    properties:
      firstPaymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of first payment to be sent.
      id:
        type: string
        description: Payment Schedule resource ID.
      lastPaymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of last payment to be sent.
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      numberOfPayments:
        type: integer
        format: int32
        description: The number of payments scheduled. Returned for FIXED_LENGTH schedules, NULL for OPEN_ENDED schedules.
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Amount of regular payments to be sent
      paymentCustomFrequency:
        type: number
        enum:
          - 3
          - 6
        description: Determines if a payment schedule is quarterly (payment every 3 months) or bi-annually (payment every 6 months). Only present for CUSTOM paymentFrequency.
      paymentDateInMonth:
        type: integer
        format: int32
        maxLength: 2
        description: Day in month between 1 and 31.
      paymentDayOfWeek:
        type: string
        enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
      paymentFrequency:
        type: string
        enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - MONTHLY
          - YEARLY
          - CUSTOM
      paymentScheduleStatus:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
          - CANCELLED
      paymentType:
        type: string
        enum:
          - FIXED_LENGTH
          - OPEN_ENDED
      paymentWeekOfMonth:
        type: string
        enum:
          - FIRST
          - SECOND
          - THIRD
          - FOURTH
          - LAST
      remittanceInformation:
        type: string
        description: Remmittance Information
        maxLength: 140
      scheduleId:
        type: string
        maxLength: 19
        description: Payment Schedule Id
      startDate:
        type: string
        format: date
      twoPaymentsSamePeriod:
        type: boolean
        description: |-
          Boolean that determines if two direct debits should be generated, in case subsequent payment date (paymentDayOfWeek, paymentWeekOfMonth, paymentDateInMonth) is later than the startDate.

          If TRUE, two payments can occur in the same month.

          If FALSE, when two payments would occur in the same month the later payment will be shifted to the first business day of the next month.
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeInnerOfRepresentFailedDirectDebitResponseEntity:
    type: object
    properties:
      actualCollectionDate:
        type: string
        format: date
        description: Actual Settlement Date
      endToEndId:
        type: string
        maxLength: 35
        description: End To End Id
      exportDate:
        type: string
        format: date
        description: Export Date
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      originalEndToEndId:
        type: string
        maxLength: 35
        description: Returns a non-null value only if direct debit is a re-presentation of a different direct debit.
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Direct Debit Amount
      paymentStatus:
        type: string
        enum:
          - REFUSED
          - REFUNDED
          - REVERSED
          - REVOKED
          - CANCELLED
          - RETURNED
          - REJECTED
          - REPRESENTED
      rejectDetails:
        $ref: "#/definitions/RejectDetailsResponse"
      remittanceInformation:
        type: string
        description: Remmittance Information
        maxLength: 140
      structuredRemittanceInformation:
        $ref: "#/definitions/StructuredRemittanceInformationDD"
      representationAttemptNumber:
        type: integer
        format: int32
      requestedCollectionDate:
        type: string
        format: date
      scheduleId:
        type: string
        maxLength: 19
        description: Payment Schedule Id
      uri:
        type: string
        description: resource Uri
  RestResponseEnvelopeInnerOfResponseMandateRestEntity:
    type: object
    required:
      - debtor
      - debtorAccount
    properties:
      id:
        type: string
        description: Encoded resource ID of the mandate object
      uri:
        type: string
        description: URI of mandate object
      creditorAccount:
        $ref: "#/definitions/CreditorAccountRestEntity"
      debtor:
        $ref: "#/definitions/DebtorRestEntity"
      debtorAccount:
        $ref: "#/definitions/DebtorAccountRestEntity"
      mandateInfo:
        $ref: "#/definitions/ResponseMandateInfoRestEntity"
      rejectDetails:
        $ref: "#/definitions/RejectDetailsMandateResponse"
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
  RestResponseEnvelopeInnerOfRevokeAllDirectDebitsResponseEntity:
    type: object
    properties:
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      totalAmountRevoked:
        type: number
        description: Response Parameter only. Total Amount Revoked
      totalTransactionsRevoked:
        type: integer
        format: int32
        description: Response Parameter only. Total Number of Transactions Revoked
      uri:
        type: string
        description: resource Uri
  RestResponseEnvelopeInnerOfRevokeDirectDebitResponseEntity:
    type: object
    properties:
      actualCollectionDate:
        type: string
        format: date
        description: Requested Settlement Date.
      endToEndId:
        type: string
        maxLength: 35
        description: Payment Reference
      exportDate:
        type: string
        format: date
        description: Export Date
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      originalEndToEndId:
        type: string
        description: Returns a non-null value only if direct debit is a re-presentation of a different direct debit.
        maxLength: 35
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Payment Amount
      paymentStatus:
        type: string
        enum:
          - READY_FOR_EXPORT
          - EXPORTING
          - REVOKED
          - EXPORTED
          - ACCEPTED
          - REVERSED
          - REFUSED
          - REJECTED
          - RETURNED
          - REFUNDED
          - CANCELLED
          - PENDING
          - PENDING_SETTLEMENT
          - REPRESENTED
      rejectDetails:
        $ref: "#/definitions/RejectDetailsResponse"
      remittanceInformation:
        type: string
        description: Remmittance Information
        maxLength: 140
      structuredRemittanceInformation:
        $ref: "#/definitions/StructuredRemittanceInformationDD"
      representationAttemptNumber:
        type: integer
        format: int32
        description: Return parameter only
      requestedCollectionDate:
        type: string
        format: date
        description: Requested Settlement Date
      scheduleId:
        type: string
        maxLength: 19
        description: Payment Schedule Id
      uri:
        type: string
        description: Resource URI
  RestResponseEnvelopeInnerOfTransfersResponse:
    type: object
    properties:
      accountFrom:
        $ref: "#/definitions/OriginatorAccountResponse"
      accountTo:
        $ref: "#/definitions/OriginatorAccountResponse"
      amount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Transferred amount.
      currency:
        type: string
        description: Transfer currency.
      id:
        type: string
        description: Resource Id.
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      remittanceInfo:
        type: string
        description: Remittance Info.
      requestedExecutionDate:
        type: string
        format: date
        description: Requested execution date.
      uri:
        type: string
        description: Resource URI.
  RestResponseEnvelopeInnerOfViewDirectDebitResponseEntity:
    type: object
    properties:
      actualCollectionDate:
        type: string
        format: date
        description: Actual Settlement Date
      endToEndId:
        type: string
        maxLength: 35
        description: Payment Reference
      exportDate:
        type: string
        format: date
        description: Export Date
      id:
        type: string
        description: Resource Id
      links:
        type: array
        items:
          $ref: "#/definitions/RestResponseLink"
      originalEndToEndId:
        type: string
        description: Returns a non-null value only if direct debit is a re-presentation of a different direct debit.
        maxLength: 35
      paymentAmount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Payment Amount
      paymentStatus:
        type: string
        enum:
          - READY_FOR_EXPORT
          - EXPORTING
          - REVOKED
          - EXPORTED
          - ACCEPTED
          - REVERSED
          - REFUSED
          - REJECTED
          - RETURNED
          - REFUNDED
          - CANCELLED
          - PENDING
          - PENDING_SETTLEMENT
          - REPRESENTED
      rejectDetails:
        $ref: "#/definitions/RejectDetailsResponse"
      remittanceInformation:
        type: string
        description: Remmittance Information
        maxLength: 140
      structuredRemittanceInformation:
        $ref: "#/definitions/StructuredRemittanceInformationDD"
      representationAttemptNumber:
        type: integer
        format: int32
        description: Representation Attempt Number
      requestedCollectionDate:
        type: string
        format: date
        description: Requested collection date
      scheduleId:
        type: string
        maxLength: 19
        description: Payment Schedule Id
      uri:
        type: string
        description: Resource URI
  RestResponseEnvelopeOfAccountResponseEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfAccountResponseEntity"
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeOfAccountValidationResponseRestEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfAccountValidationResponseRestEntity"
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeOfAddSinglePaymentResponseEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfAddSinglePaymentResponseEntity"
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeOfPaymentScheduleResponseEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfPaymentScheduleResponseEntity"
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeOfRepresentFailedDirectDebitResponseEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfRepresentFailedDirectDebitResponseEntity"
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeOfResponseMandateRestEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfResponseMandateRestEntity"
      uri:
        type: string
  RestResponseEnvelopeOfRevokeAllDirectDebitsResponseEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfRevokeAllDirectDebitsResponseEntity"
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeOfRevokeDirectDebitResponseEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfRevokeDirectDebitResponseEntity"
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeOfTransfersResponse:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfTransfersResponse"
      uri:
        type: string
  RestResponseEnvelopeOfViewDirectDebitResponseEntity:
    type: object
    properties:
      data:
        $ref: "#/definitions/RestResponseEnvelopeInnerOfViewDirectDebitResponseEntity"
      uri:
        type: string
        description: Resource Uri
  RestResponseEnvelopeOfViewAccountTransactionResponse:
    type: object
    properties:
      uri:
        type: string
      data:
        $ref: '#/definitions/RestResponseEnvelopeInnerOfAccountTransactionEntity'      
    example:
      uri: /accounts/p2lq97jamv/transactions/abxgelnw5m
      data:
        id: abxgelnw5m
        uri: /accounts/p2lq97jamv/transactions/abxgelnw5m
        links: []
        postingDate: '2018-09-06'
        transactionType: INCOMING_CREDIT_TRANSFER
        valueDate: '2018-09-27'
        amount: 10000
        currency: EUR
        creditDebitIndicator: CREDIT
        purposeCode: BKDF
        endToEndId: endToEndId
        mandateReference: null
        ultimateCreditorId: null
        ultimateCreditorName: null
        ultimateDebtorId: null
        ultimateDebtorName: null
        reasonCode: null
        reasonProprietary: null
        bulkMessageId: null
        batchReference: null
        unstructuredRemittanceInformation: unstructuredRemittanceInformation
        structuredRemittanceInformation:
          creditorReference: reference
        remittanceInfo: remittanceInfo
        schemeType: null
        numberOfTransactions: null
        totalAmount: null
        balanceAfterTransaction: null
        counterparty:
          name: counterparty name
          address:
            line1: address line1
            line2: address line1
            postalCode: '123123'
            town: town
            country: IE
          account:
            bic: SELNGB21
            iban: GB94SELN00999976543215
            domesticAccountNumber: null
            domesticBankCode: null
            domesticBranchCode: null
            domesticCheckSum: null
            domesticAccountCountry: null 
        creationDateTime: "2022-05-19T10:32:01Z"
        creationTimestamp: 1652956321000
  RestResponseLink:
    type: object
    properties:
      id:
        type: string
        description: "Encoded Id of linked resource "
      resourceType:
        type: string
        description: Resource Type
        enum:
          - mandate
          - scheme
          - schedule
          - balances
          - beneficiary
          - account
          - subaccounts
      uri:
        type: string
        description: Resource URI
  RestResponsePaginationDetails:
    type: object
    properties:
      pageNumber:
        type: integer
        format: int32
        default: 1
        description: Page Number
      pageSize:
        type: integer
        format: int32
        default: 20
        description: Page Size
      totalElements:
        type: integer
        format: int32
        description: Total Number of elements returned. Response parameter only
      totalPages:
        type: integer
        format: int32
        description: Total Number of pages returned. Response parameter only
  RevokeAllDirectDebitsRequestEntity:
    type: object
    properties:
      operationReason:
        type: string
        maxLength: 140
        description: Reason for the revocation.
      scheduleId:
        type: string
        maxLength: 19
        description: Payment Schedule Reference.
  RevokeDirectDebitRequestEntity:
    type: object
    properties:
      operationReason:
        type: string
        maxLength: 140
        description: Reason for revoke
  SchemeNameEntity:
    type: object
    description: One instance of 'Scheme Name Code' or 'Scheme Name Proprietary' is allowed.
    properties:
      code:
        type: string
        minLength: 1
        maxLength: 4
        description: Private ID Other Scheme Name Code, ENUM based on ISO external code set 'ExternalPersonIdentification1Code'.
      proprietary:
        type: string
        minLength: 1
        maxLength: 35
        description: Private ID Other Scheme Name Proprietary
  NuapayTransactionFilter:
    type: object
    properties:
      valueDateFrom:
        type: string
        format: date-time
      valueDateTo:
        type: string
        format: date-time
      amountFrom:
        type: string
        minimum: 0
        maximum: 999999999999.99
      amountTo:
        type: string
        minimum: 0
        maximum: 999999999999.99
      remittanceInfo:
        type: string
      endToEndId:
        type: string
      counterpartyName:
        type: string
      counterpartyIban:
        type: string
      counterpartyAccountNumber:
        type: string
      reference:
        type: string
      creditDebitIndicator:
        type: string
        enum:
          - DEBIT
          - CREDIT
      type:
        type: string
        enum:
          - FEES
          - DIRECT_DEBITS
          - CREDIT_TRANSFERS
          - INTERNAL
          - OTHER
      settlementId:
        type: string
        description:  Settlement Id as received in the List Settlements for Account Response
      transactionType: 
        type: array
        items:
          type: string
        description: Transaction Types - allow to filter specific transaction types. 
  TransfersRequest:
    type: object
    required:
      - accountFrom
      - accountTo
      - amount
      - currency
      - requestedExecutionDate
    properties:
      accountFrom:
        $ref: "#/definitions/OriginatorAccount"
      accountTo:
        $ref: "#/definitions/OriginatorAccount"
      amount:
        type: number
        minimum: 0.01
        maximum: 999999999.99
        description: Transfer amount. Max length without decimals is 9 digits. Decimal separator is '.'.  Max two decimal places allowed.
      currency:
        type: string
        enum:
          - EUR
          - GBP
        description: Transfer currency. Must be a 3 letter ISO country code.
      remittanceInfo:
        type: string
        maxLength: 140
        description: Remittance information.
      requestedExecutionDate:
        type: string
        format: date
        description: Requested Execution Date for the credit transfer, should always be the current processing date. If not provided it will be set to the current processing date.
    example:
      requestedExecutionDate: 2018-10-18
      remittanceInfo: Transfer Example
      amount: 0.01
      currency: EUR
      accountFrom:
        iban: GB35SELN00999903769154
      accountTo:
        iban: GB20SELN00999923882374
  UploadFileResponse:
    type: object
    properties:
      data:
        $ref: "#/definitions/UploadFileSuccessResponseData"
      uri:
        type: string
        description: URI of file resource created.
  UploadFileSuccessResponseData:
    type: object
    properties:
      id:
        type: string
        description: ID of file resource created.
      newFileName:
        type: string
        description: During processing the original file name will have additional Ids and statuses appended, this is the processed file name.
      originalFileName:
        type: string
        description: The original file name as supplied during the upload.
      uri:
        type: string
        description: URI of file resource created.
  StructuredRemittanceInformation:
    type: object
    description: Structured remittance information.
    properties:
      creditorReference:
        type: string
        maxLength: 35
  StructuredRemittanceInformationDD:
    type: object
    description: Structured remittance information.
    properties:
      reference:
        type: string
        maxLength: 35
  CreditTransferBatchRecallResponseEnvelope:
    type: object
    properties:
      data:
        $ref: '#/definitions/Batch'
      uri:
        type: string
  Batch:
    type: object
    properties:
      id:
        type: string
        description: Batch ID.
      uri:
        type: string
        description: URI of file resource created.
      batchReference:
        type: string
        description: The batch reference provided in imported payment file in Payment Information Id.
      status:
        type: string
        description: Status of the Batch.
        enum:
          - COMPLETE
          - COMPLETE_WITH_ERRORS
          - DUE
          - IN_PROGRESS
          - REJECTED
          - REVOKED
          - SETTLED
          - PENDING
          - PENDING_SETTLEMENT
          - RECALLED
      creationDateTime:
        type: string
        format: date-time
        description: Date and time when the File containing the Batch has been uploaded.
      dueDate:
        type: string
        description: Date on which the Batch is due.
        format: date
      rejectionDetails:
        $ref: '#/definitions/RejectionDetails'
      numberOfTransactions:
        type: integer
        format: int32
        minimum: 0
        description: Number of transactions in the Batch.
      valueOfTransactions:
        type: number
        description: Total value of Transactions in the Batch.
      links:
        type: array
        items:
          $ref: '#/definitions/RestResponseLink'
  RejectionDetails:
    type: object
    properties:
      rejectionReason:
        type: string
        description: Coded rejection reason.
      rejectionDescription:
        type: string
        description: Free text rejection reason description.
      rejectionDateTime:
        type: string
        format: date-time
        description: Date and time of rejection.
  SettlementCreditTransfer:
    type: object
    properties:
      id:
        type: string
        description: Settlement Credit Transfer Id
      uri:
        type: string
        description: Settlement Credit Transfer Uri
      amount:
        type: number
        description: Settlement Credit Tranfer Amount
      currency:
        type: string
        enum:
          - EUR
          - GBP
        description: Settlement Credit Transfer Currency
      executionDate:
        type: string
        format: date
        description: Settlement Credit Transfer Execution Date
